function model = media(model, medium)
% @author: Scott Campit
%% media.m defines the medium constraints we will impose on the Genome-scale metabolic model. 
% By default, the substrate uptake rates were set to RPMI conditions by default. 
    % Other medium conditions were scaled w.r.t RPMI amounts (using ratios
    % from concentrations as the scaling factor).
    
if verLessThan('matlab', '9.6.0.1072779')
    [~, sheetNames] = xlsfinfo('./../../data/final_medium_conditions.xlsx');
    for sheets = 1:length(sheetNames)
        if ismember(sheetNames(sheets), medium)
            [adjustedLB, rxn_ids] = xlsread('./../../data/final_medium_conditions.xlsx',...
                sheetNames(sheets));
            rxn_ids(1,1) = [];
            
            for rxn=1:length(rxn_ids)
                model.lb(find(ismember(model.rxns, rxn_ids(rxn, 1)))) = ...
                    adjustedLB(rxn, 4);
            end
            
        elseif ismember({'nan'}, medium)
            [adjustedLB, rxn_ids] = xlsread('./../../data/final_medium_conditions.xlsx', ...
                'RPMI');
            rxn_ids(1,:) = [];
            
            for rxn=1:length(rxn_ids)
                model.lb(find(ismember(model.rxns, rxn_ids(rxn, 1)))) = ...
                    adjustedLB(rxn, 4);
            end
            
        end
    end
    
else
    [~, sheetNames] = xlsfinfo('./../../data/final_medium_conditions.xlsx');
    for sheets = 1:length(sheetNames)
        if ismember(sheetNames(sheets), medium)
            dataArray = readcell('./../../data/final_medium_conditions.xlsx',...
                'Sheet', sheetNames(sheets));
            dataArray(1,1) = [];
            for rxn=1:length(dataArray)
                model.lb(find(ismember(model.rxns, dataArray(rxn, 1)))) = ...
                    cell2mat(dataArray(rxn, 7));
            end
        elseif ismember({'nan'}, medium)
            dataArray = readcell('./../../data/final_medium_conditions.xlsx',...
                'Sheet', 'RPMI');
            dataArray(1,1) = [];
            for rxn=1:length(dataArray)
                model.lb(find(ismember(model.rxns, dataArray(rxn, 1)))) = ...
                    cell2mat(dataArray(rxn, 7));
            end
        end
    end
end

end