

function getIsLoggedIn() {
	return _lt.user.isLoggedIn;
}

function getIsB2B() {
	var displayType = _lt.user.displayType;
	if(displayType.indexOf("b2b") != -1 && displayType.indexOf("cmgt") != -1) return true;
	else return false;
}

function getIsMaster() {
	return _lt.user.isMasterUser;
}

function getIsB2BCustomerType() {
	var customerType = getUserCustomerType();
	if ( !customerType ) return false;
	else if ( customerType == "B2B" || customerType == "b2b" ) return true;
	else return false;
}

function getDisplayType() {
	return _lt.user.getInfo('displayType',false);
}

function getUserCustomerType() {
	return _lt.user.getInfo('customerType',false);
}


function getCartItemsCount() {
	var cartItemsCount = getCookie("MiniCartTotalItems");
	if( !cartItemsCount ) cartItemsCount = "0";
	return cartItemsCount;
}

function isGesIsoCode() {
	var countryCode = getUserCountryCode();
	var apacIsoCodes = environmentURL.GESISOCODES;
	var apacArray = apacIsoCodes.split(",");
	if( countryCode ) {
		for(var i = 0; i < apacArray.length; i++) {
			if(apacArray[i] == countryCode) {
				return true;
			}
		}
	}
	return false;
}

function removeSpecialChars(strVal) {
	return strVal.replace(/[^\x21-\x7E\s\t\n\r]+/g, ''); //lol, what?
}

/* This method returns the relative URL from the links
*
*/
function getURLPath(urlString) {
	var pathString="";
	if(urlString.indexOf( 'http://' )!=-1)
		pathString = urlString.substring(7);
	else if(urlString.indexOf( 'https://' )!=-1)
		pathString = urlString.substring(8);
	return pathString.substring(pathString.indexOf("\/"));
}
/*End Changes */

function isEUCountry() {
    return _lt.user.displayIsoMatch('EUROPE');
}


function textReplacement(input, button){
	var placeholderSupport = ("placeholder" in document.createElement("input"));
	var originalvalue = '';

	if (!placeholderSupport) {

		if ( input.val() == '' ) input.val(input.attr('placeholder'));
		input.focus( function(){
			if( $.trim(input.val()) == input.attr('placeholder') ){
				input.val('');
				$(this).removeClass('placeholder');
			}
		});
		input.blur( function(){
			if( $.trim(input.val()) == '' ){
				input.val(input.attr('placeholder'));
				$(this).addClass('placeholder');
			}
		});
	}

	if ( button && button.length > 0 ) {
		button.click(function(e) {
			var inval = $.trim(input.val());
			if ( inval == originalvalue ) {
				e.preventDefault();
			}
		});
		button.keyup(function(e) {
			var inval = $.trim(input.val());
			if ( inval == originalvalue ) {
				e.preventDefault();
			}
		});
	}
}

function getValueFromCookieData(cookieData, name) {
	if(cookieData != null){
		var cookieArray = cookieData.split(";");
		for (var i = 0; i < cookieArray.length; i++) {
			var pair = cookieArray[i].split(":");
			if (pair && pair.length == 2 && pair[0] == name) {
				return pair[1];
			}
		}
	}

	return '';
}

function isB2bDisplayType() {
	return _lt.displayTypeMatch('B2B');
}

function isLifetechSite() {
	return window.location.hostname.indexOf('thermofisher.com') > -1 ||
	window.location.hostname.indexOf('localhost') > -1;
}

function setCurrentDomainCookie(key, value) {
    if (key == 'CK_ISO_CODE' || key == 'CK_LANG_CODE') {
    	setCookie(key, value, 90);
    }
    else {
    	setCookie(key, value);
    }
}

function getB2bUserKey() {
	if ( isB2bDisplayType() ) {
		return _lt.user.getInfo('userkey',null);
	} else return null;
}

function isB2BMasterUser() {
	return _lt.user.isMasterUser;
}

function stripQuotes(str) {
	if (!str || str.length == 0)  return "";

	var strippedStr = str;
	if (str.charAt(0) === '"') {
		strippedStr = str.slice(1);
	}
	if (str.charAt(str.length - 1) === '"') {
		strippedStr = strippedStr.slice(0, strippedStr.length - 1)
	}
	return strippedStr;
}
var ltHeader = new function(){

    this.init = function(){
        // do not fire any of this if header/footer not present
        if ( window.globalHeaderConfig ) {
            this.setupLinks();
            this.defaultCookies();
            this.hideRegisterBasedOnCountry();
            this.hideMyAccountMenu();
            this.showAppropriateScmsElements();

            // Allows certain pages to hide the miniCart by utilizing a ltHeader config object
            if (window.ltHeaderConfig) {
                if (ltHeaderConfig.minicart === false) {
                    ltHeader.hideMiniCart();
                }
            }
        }
    };

	this.setupLinks = function(){

		var globalHeaderConfig = window.globalHeaderConfig;

		this.scmsEuLogoLinkHref = globalHeaderConfig.scmsEuLogoLinkHref,
		this.scmsEuLogoImagePath = globalHeaderConfig.scmsEuLogoImagePath;
		this.scmsEuLogoImagePrintPath = globalHeaderConfig.scmsEuLogoImagePrintPath;
		this.scmsShipToLabLogoLinkHref = globalHeaderConfig.scmsShipToLabLogoLinkHref;
		this.scmsShipToLabLogoImagePath = globalHeaderConfig.scmsShipToLabLogoImagePath;
		this.scmsShipToLabLogoImagePrintPath = globalHeaderConfig.scmsShipToLabLogoImagePrintPath;
		this.scmsEuShipToLabLogoLinkHref = globalHeaderConfig.scmsEuShipToLabLogoLinkHref;
		this.scmsEuShipToLabLogoImagePath = globalHeaderConfig.scmsEuShipToLabLogoImagePath;
		this.scmsEuShipToLabLogoImagePrintPath = globalHeaderConfig.scmsEuShipToLabLogoImagePrintPath;

		this.scmsNavLinkTextForEU = globalHeaderConfig.scmsNavLinkTextForEU;
		this.scmsNavUnlockLinkTextForEU = globalHeaderConfig.scmsNavUnlockLinkTextForEU;
		this.scmsNavChangeLocationLinkTextForEU = globalHeaderConfig.scmsNavChangeLocationLinkTextForEU;
		this.scmsNavSetStartPageLinkTextForEU = globalHeaderConfig.scmsNavSetStartPageLinkTextForEU;
		this.scmsNavSupplyCenterHomeLinkTextForEU = globalHeaderConfig.scmsNavSupplyCenterHomeLinkTextForEU;
		this.scmsNavSupplyCenterHomeForLabLinkTextForEU = globalHeaderConfig.scmsNavSupplyCenterHomeForLabLinkTextForEU;

		this.utilityBarSignInForwardLinkHref = globalHeaderConfig.utilityBarSignInForwardLinkHref;
		
	};

	//If in author mode the CK_ISO_CODE and CK_LANG_CODE are not set automatically
	this.defaultCookies = function(){
		if (!getCookie('CK_ISO_CODE')) {
			setCookie('CK_ISO_CODE','us');
		}
		else if (!getCookie('CK_LANG_CODE')) {
			setCookie('CK_LANG_CODE','en');
		}
	};

	//sets up an object that defines publicly accessible functions that can be used to modify the syndicated header
	//NOTE: this object comprises an API that is used inside and outside the header
	this.hideMiniCart = function(){
		//hides the minicart button in the commerce utility bar
		hideElementById("miniCartButton");
	};

	this.hideMyCustomProducts = function(){
		//hides the "My Custom Products" menu item in the commerce utility bar under the "my account" menu
		hideElementById("hfMyCustomProductsLi");
	};

	this.hideMySettings = function(){
		//hides the "My Settings" menu item in the commerce utility bar under the "my account" menu
		hideElementById("hfMySettingsLi");
	};

	this.hideMyAccountOptions = function(){
		//hides the "My Account Drop downs" menu item in the commerce utility bar
		hideElementById("hfMyAccountOptions");
	};
	this.hideMyAccountMenu = function(){
		//hides the "Sign In" menu item in the commerce utility bar
	   var isoCode = getCookieOrDefault("CK_ISO_CODE", "us");
		if ( !window.ltCountryInfo || stringEqualsIgnoreCase(ltCountryInfo[isoCode].signInHidden, 'true') && stringEqualsIgnoreCase(ltCountryInfo[isoCode].registerHidden, 'true'))
		{
			hideElementById("hfGreetByName");
			hideElementById("hfGreetAnonymous");
		}
	};

	this.hideRegister = function(){
		//hides the "Register" menu item in the commerce utility bar
		hideElementById("hfRegisterLi");
	};

	this.hideScmsMenu = function(){
		hideElementById("scms-home");
		hideElementById("hfScmsSettings");
		hideElementById("scms-unlock");
		hideElementById("scms-change-location");
		hideElementById("scms-set-start");
	};

	this.hideScmsHomeForScLink = function(){
		hideElementById("hfScmsHomeLink");
	};

	this.hideScmsChangeLocationLink = function(){
		hideElementById("scms-change-location");
	};

	this.hideScmsAlertIcons = function(){
		hideElementsByClassName("scms-alert-icon");
	};

	this.hideScmsStartPageLink = function(){
		hideElementById("scms-set-start");
	};

	this.hideScmsUnlock = function(){
		hideElementById("scms-unlock");
	};

	this.showScmsShipToLab = function(){
		messagingBar.addMessage('<span id="hfScmsShipToLab"></span>'+localizedStrings.SCMS_SHIP_TO_LAB);
	};

	this.showScmsShipToSC = function(isEu){

		var scidText = getUnescapedCookie("scidSCName");
		
		var titleText = localizedStrings.SCMS_SHIP_TO_SC;
		if ( isEu ) titleText = localizedStrings.SCMS_SHIP_TO_SC_FOR_EU;

		var hfScmsShipToSC = '<span id="hfScmsShipToSC"></span>'+titleText+'<span id="hfScmcShipToSCText">: '+scidText+'</span>';
		messagingBar.addMessage( hfScmsShipToSC );

	};

	this.showScmsShipToSCForEU = function(){
		this.showScmsShipToSC(true);
	};

	this.showScmsHomeForLabLink = function(){
		showElementById("hfScmsHomeForLabLink");
	};

	this.hideRegisterBasedOnCountry = function(){
		var isoCode = _lt.user.getInfo('displayIso','us');
		if ( !window.ltCountryInfo || stringEqualsIgnoreCase(ltCountryInfo[isoCode].registerHidden, 'true')){
			this.hideRegister();
		}
	};

	this.getCustInfoDisplayType = function() {

		var ckCustInfo = getCookie('CK_CUSTOMER_INFO');
		var arr = ckCustInfo.match(/displayType(?:%3A|\:)([a-zA-Z]*)/i);

		// if there was a match, arr should be like ['displayType:cmgtpscms','cmgtpscms']
		if(arr) {
			var displayType = arr[1];
			// displayType should be something like cmgtpscms
			return displayType;
		}
		// fallback to CK_DISPLAY_TYPE
		return getCookie('CK_DISPLAY_TYPE');
	}

	this.showAppropriateScmsElements = function(){

		var displayType = getCookie("CK_DISPLAY_TYPE");
		var scShipType = getCookie("scShipType");
		var scStartPage = getCookie("scStartPage");
		var scList = getCookie("scList");
		var displayChangeSC = getCookie("displayChangeSC");
		var isScKiosk = getCookie("ISSCKIOSK");
		var isSecuredStorageAccess = getCookie('isSecuredStorageAccess');
		var isoCode = getCookieOrDefault("CK_ISO_CODE", "us");
		var scCustomerId = getCookie('CUSTOMERID');
		var scChangeLocationUrl = $('#scms-change-location').find('a').attr('href') + scCustomerId + "#changeSCLocation";
		var scSetStartPage = $('#scms-set-start').find('a').attr('href')+"&UserKey=" + scCustomerId + "#SCLocationSelected";
		var euCountry = window.ltCountryInfo && ltCountryInfo[isoCode].euCountry;

		if (stringEqualsIgnoreCase(displayType, 'cmgtsc') || stringEqualsIgnoreCase(displayType, 'cmgtpscms') || stringEqualsIgnoreCase(displayType, 'pscmsmaster'))
		{
			if(stringEqualsIgnoreCase(scShipType, "SC"))
			{
				if (stringEqualsIgnoreCase(euCountry, 'true'))
				{
					$("#hfLifetechLogoLink").attr('href', this.scmsEuLogoLinkHref);
					$("#hfLifetechLogoImage").attr('src', this.scmsEuLogoImagePath);
					$("#hfLifetechLogoPrintImage").attr('src', this.scmsEuLogoImagePrintPath);

					$("#hfScmsMenuLinkText").text(this.scmsNavLinkTextForEU);
					$("#hfScmsUnlockLink").text(this.scmsNavUnlockLinkTextForEU);
					$("#hfScmsChangeLocationLink").text(this.scmsNavChangeLocationLinkTextForEU);
					$("#hfScmsSetStartLink").text(this.scmsNavSetStartPageLinkTextForEU);
					$("#hfScmsHomeLink").text(this.scmsNavSupplyCenterHomeLinkTextForEU);

					this.showScmsShipToSCForEU();
				}
				else
				{
					this.showScmsShipToSC();
				}
			}
			else if (stringEqualsIgnoreCase(scShipType, 'LAB') || !scShipType)
			{
				if (stringEqualsIgnoreCase(euCountry, 'true'))
				{
					$("#hfLifetechLogoLink").attr('href', this.scmsEuShipToLabLogoLinkHref);
					$("#hfLifetechLogoImage").attr('src', this.scmsEuShipToLabLogoImagePath);
					$("#hfLifetechLogoPrintImage").attr('src', this.scmsEuShipToLabLogoImagePrintPath);

					$("#hfScmsMenuLinkText").text(this.scmsNavLinkTextForEU);
					$("#hfScmsUnlockLink").text(this.scmsNavUnlockLinkTextForEU);
					$("#hfScmsChangeLocationLink").text(this.scmsNavChangeLocationLinkTextForEU);
					$("#hfScmsSetStartLink").text(this.scmsNavSetStartPageLinkTextForEU);
					$("#hfScmsHomeForLabLink").text(this.scmsNavSupplyCenterHomeForLabLinkTextForEU);
				}
				else
				{
					$("#hfLifetechLogoLink").attr('href', this.scmsShipToLabLogoLinkHref);
					$("#hfLifetechLogoImage").attr('src', this.scmsShipToLabLogoImagePath);
					$("#hfLifetechLogoPrintImage").attr('src', this.scmsShipToLabLogoImagePrintPath);
				}

				if (stringEqualsIgnoreCase(displayType, 'cmgtpscms'))
				{
					//this.hideScmsMenu();
					this.hideScmsUnlock();
					this.hideScmsStartPageLink();
					this.hideScmsChangeLocationLink();
					hideElementById("scms-home");
					hideElementById("hfScmsSettings");
				}
				else
				{
					this.hideScmsHomeForScLink();
					this.showScmsHomeForLabLink();
					this.showScmsShipToLab();
				}
			}
		}

		if (!scStartPage || stringEquals(scStartPage, '0'))
		{
			this.hideScmsStartPageLink();
		}
		else
		{
			$('#scms-set-start').find('a').attr("href", scSetStartPage);
		}

		if (!displayChangeSC || stringEquals(displayChangeSC, '0') || !scList || stringEquals(scList, '0'))
		{
			this.hideScmsChangeLocationLink();
		}
		else
		{
			$('#scms-change-location').find('a').attr("href", scChangeLocationUrl);
		}

		if (!isScKiosk || stringEquals(isScKiosk, '0') || !isSecuredStorageAccess || stringEquals(isSecuredStorageAccess, '0'))
		{
			this.hideScmsAlertIcons();
			this.hideScmsUnlock();
		}
	};

	this.syncHomeBreadcrumbLink = function(){
		return false;
		//This has been deprecated
	};

	function validUrl(url) {
		var validUrl = true;

		//validate URL is string, not empty  and starts with HTTP:// or HTTPS://
		if (    (typeof url !== 'string') ||  !url.match(/^http(s)?:\/\//gi)     )
		{
			validUrl = false;
		}
		return validUrl;
	}

	function hideElementById(idString) {
		$('#'+idString).hide();
	}

	function showElementById(idString) {
		$('#'+idString).show();
	}

	function hideElementsByClassName(className) {
		$('.'+className).hide();
	}

	function getCookieOrDefault(name, defaultVal) {
		var cookieVal = getCookie(name);
		if (!cookieVal)
		{
			cookieVal = defaultVal;
		}
		return cookieVal;
	}

	function getUnescapedCookie(name) {
		var cname = name + '=';
		var dc = document.cookie;
		if (dc == null) return '';
		if (dc.length > 0)
		{
			var begin = dc.indexOf(cname);
			if (begin != -1)
			{
				begin += cname.length;
				var end = dc.indexOf(';', begin);
				if (end == -1) end = dc.length;
				return unescape(dc.substring(begin, end));
			}
		}
		return '';
	}

	function stringEquals(s1, s2){
		return s1 && s1 === s2;
	}

	function stringEqualsIgnoreCase(s1, s2){
		return s1 && s2 && s1.toUpperCase() === s2.toUpperCase();
	}
	
};


var ltHeaderDebug = new function() {

	this.showRowOneOuterContainers = function() {
		$('.header_row_1.layout_cont_left').css('border', 'blue solid 2px');
		$('.header_row_1.layout_cont_right').css('border', 'blue solid 2px');
		$('.header_row_1.layout_cont_middle').css('border', 'blue solid 2px');
	}

	this.showRowOneMajorContainers = function() {
		$('.logo').css('border', 'aquamarine solid 2px');
		$('.siteheader').css('border', 'aquamarine solid 2px');
		$('#user-utility-bar').css('border', 'aquamarine solid 2px');
	}
	
	this.showRowTwoOuterContainers = function() {
		$('.header_row_2.layout_cont_left').css('border', 'red solid 2px');
		$('.header_row_2.layout_cont_right').css('border', 'red solid 2px');
		$('.header_row_2.layout_cont_middle').css('border', 'red solid 2px');
	}
	
	this.showSearchBarOuterContainers = function() {
		$('.search').css('border', 'orange solid 2px');
	}
	
	this.showSearchBarMajorContainers = function() {
		$('#focusAreaSelector').css('border', 'green solid 2px');
		$('#generalSearch').css('border', 'green solid 2px');
		$('#primarySearch').css('border', 'green solid 2px');
	}
	
	this.showGeneralSearchOuterContainers = function() {
		$('.general_search.layout_cont_left').css('border', 'red solid 2px');
		$('.general_search.layout_cont_right').css('border', 'red solid 2px');
		$('.general_search.layout_cont_middle').css('border', 'red solid 2px');
	}

	this.showGeneralSearchMajorContainers = function() {
		$('#generalSearchButton').css('border', 'gold solid 2px');
		$('#generalSearchInput').css('border', 'gold solid 2px');
	}

	this.setCartCount = function(value, numDays) {
		name = 'MiniCartTotalItems';
		if ( !numDays ) numDays = 31;
		var expires = new Date();
		expires.setTime(expires.getTime() + (1000 * 60 * 60 * 24 * numDays));
		document.cookie = name+ '=' + escape(value) + '; path=/; expires=' + expires.toGMTString() + ';';
	}

	this.openMegaNavItem = function(value) {
		this.closeAllMegaNavItems();
		
		$("#meganav-content li[data-index-initial='" + + escape(value) + "'] ul").css('display', 'block');
	}

	this.closeAllMegaNavItems = function() {
		$("#meganav-content li").removeClass('active');
		$("#meganav-content li").removeClass('in');
		$("#meganav-content li ul").css('display', '');
	}
	
	this.simulateGeneralSearchTypeAhead = function() {

        var $form = $('#smartsearch');
        
        var $typeahead_container = $('#header-typeahead');
        var $term_list = $('div.typeahead-terms', $form);
        var $search_terms = $('ul.typeahead-term-list', $form);
        var $flyout = $('.flyout-typeahead', $form);
        var $recent_searches = $('.flyout-recent-searches', $form);
        var $hidden_autocomplete = $('#typeahead-autocomplete');
        var $submit_button = $('#searchButton', $form);
        
        $search_terms.empty();
        
        $search_terms.append(
        	'<li class="typeahead-ignore"><div class="search-suggestions">Search suggestions</div></li>' +
            '<li><a data-omni-action="STANDARD|beakers 250ml" term="beakers 250ml" class="typeahead-term" style="text-decoration: none;"><span class="typeahead-span"><strong>beakers</strong> 250ml</span></a></li>' +
            '<li><a data-omni-action="STANDARD|beakers with handles" term="beakers with handles" class="typeahead-term" style="text-decoration: none;"><span class="typeahead-span"><strong>beakers</strong> with handles</span></a></li>' +
            '<li><a data-omni-action="STANDARD|beakers, graduated cylinders &amp; burets" term="beakers, graduated cylinders &amp; burets" class="typeahead-term" style="text-decoration: none;"><span class="typeahead-span"><strong>beakers</strong>, graduated cylinders &amp; burets</span></a></li>' +
            '<li><a data-omni-action="STANDARD|plastic beakers" term="plastic beakers" class="typeahead-term" style="text-decoration: none;"><span class="typeahead-span">plastic <strong>beakers</strong></span></a></li>'
        );
        
        $typeahead_container.css('display', 'block');
        $flyout.css('display', 'block');
	}
	
};



/*
	Boolean check to determine if current page is responsive
	We can assume that if 'viewport' meta tag is present then page is responsive
*/
ltHeader.isResponsive = function(){
	// Even if we have viewport tag, IE8 wont support.
	// This can go away.. eventually
	// Lazy IE8 check
	var isIE8 = window.attachEvent && !window.addEventListener;

	return !isIE8 && $('meta[name="viewport"]').length > 0;
};


/*
	Gives you current viewport size
	Returns 'lg' if not responsive
*/
ltHeader.getCurrentViewportSize = function(){

	var which = 'lg';

	if ( ltHeader.isResponsive() ) {

		which = 'xl';
		var breakpoints = {
		    lg: 1200,
		    md: 980,
		    sm: 768,
		    xs: 480
		};

		var width = $(window).width();
		for ( var w in breakpoints ) {
		    if ( width < breakpoints[w] ) which = w;
		}

	}

	return which;

};


(function viewportWatchers(){

	var $document = $(document);
	var $window = $(window);
	var currentViewportSize = ltHeader.getCurrentViewportSize();


	function detectViewportChange(){
        var newViewportSize = ltHeader.getCurrentViewportSize();
        if ( newViewportSize != currentViewportSize ) {
            currentViewportSize = newViewportSize;
            $document.trigger('viewport-change');
        }
    }

	if ( ltHeader.isResponsive() ) {

	    var resizeTimeout;

	    $window.bind('resize',function(){
	        clearTimeout(resizeTimeout);
	        resizeTimeout = setTimeout(detectViewportChange,200);
	    });

	    $document.bind('viewport-change',function(){
		    var newViewport = ltHeader.getCurrentViewportSize();
		    console.log('viewport-change',newViewport);
		});
	}

})();

function punchoutClose(){
	if ( $.modal && $.modal.close ) $.modal.close();
	$('.modal-backdrop.in').trigger('click');
	return false;
}

function punchout(href, width, height) {
	var punchoutMessage = $('#punchoutMessage').html();
	var punchoutOk = $('#punchoutOk').html();
	var punchoutCancel = $('#punchoutCancel').html();
	$.ivgnStringModal(
			'<div class="modal-body">'+
				"<div style=\"padding-bottom: 10px;\" id=\"activePunchoutMessage\">" + punchoutMessage + "</div>" +
				"<a href=\"#\" class=\"button secondary-button\" onclick=\"punchoutClose(); return false;\">" + punchoutCancel + "</a>" +
			'</div>',
		{width: width, height: height});
	return false;
}

function punchoutForFeedback() {
	if(isB2bDisplayType()) {
		var punchoutMessage = $('#punchoutMessage').html();
		var punchoutCancel = $('#punchoutCancel').html();
		$.ivgnStringModal(
				'<div class="modal-body">'+
					"<div style=\"padding-bottom: 10px;\" id=\"activePunchoutMessage\">" + punchoutMessage + "</div>" +
					"<a href=\"#\" class=\"button secondary-button\" onclick=\"punchoutClose(); return false;\">" + punchoutCancel + "</a>" +
				'</div>', { width: 500, height: 200 });
	} else {
		k_config.actionOpenFFButtonLT();
	}
}

function punchoutForB2b(href) {
	if(isB2bDisplayType() || getIsB2BCustomerType() || getIsMaster()) {
		return punchout(href);
	}
	return true;
}

function punchoutForB2bWithDimensions(href, width, height) {
	if(isB2bDisplayType() || getIsB2BCustomerType() || getIsMaster()) {
		return punchout(href, width, height);
	}
	return true;
}

function initB2bPunchoutLinks($obj) {
	if(isB2bDisplayType() || getIsB2BCustomerType() || getIsMaster()) {
		if ( !$obj ) $obj = $('a[target=_blank],.b2bpunchout');
		$obj.click(function(e) {

			var canContinue = false;

			// Slight possibility of this breaking if no href set
			var link = $(this).attr('href');
			if ( link ) {

				// Whitelisted page extensions
				var allowedFileTypes = [
					'avi','m4v','mov','mp3','mpg','mpeg', //media
					'csv','doc','docx','ppt','pptx','txt','xls','xlsx','xml','pdf', //documents
					'css','js','json', //web
					'eps','jpg','jpeg','png','svg','gif', //images
					'exe','dmg','rar','zip','7z','crt','wrf','iso','air','lft','kf2','gal','ics' //others
				];

				// Current extension - LOWERCASE
				var ext = link.split('.').pop().toLowerCase();

				// jQuery's inArray function returns the index of the element in the array. -1 if not present
				// IE8 does not support indexOf, so let's use this.
				canContinue = $.inArray(ext,allowedFileTypes) !== -1; // if this is true, then the user has a valid link to follow
			}

			if ( !canContinue ) return punchout($(this).attr('href'), 500, 200);
			else return true;

		});
	}
}

/*
	Drives the global customer messaging bar
	Allows you to pass TEXT or a jQuery object to be appended
*/
var messagingBar = {

	_self: false,
	initted: false,

	hasMessages: false,

	messages: $('<div></div>'),
	sep: '<span class="messaging-bar-seperator">|</span>',
	$template: $('<div id="messagingBar"><div id="messagingBarContainer" class="container"><div id="messagingBarContent"></div></div></div>'),
	$messagingBarContent: null, //placeholder

	/*
		Adds the messaging bar HTML and body class to the page if not already innitted
	*/
	init: function(){
		if ( !this.initted ) {

			// Do not init if global header is not present on page
			if ( $('.global-commerce-bar').length > 0 ) {

				_self = this;

				this.initted = true;
				var $body = $('body');

				$body.addClass('has-messaging-bar').append(this.$template);
				this.$messagingBarContent = $('#messagingBarContent',this.$template);

				if ( getCookie(this.promosCookieName) == 'Y' ) this.promosMuted = true;

			} else {
				return false;
			}

		}

		return true;
	},

	/*
		Expects a STRING or jQuery object
		Wraps text in a span tag and adds it to our messages object, then builds the messaging bar HTML
	*/
	addMessage: function(text){
		this.hasMessages = true;
		this.addContent(text,'messages');
	},

	/*
		TODO: This should be removed mid 2017
		Promo functionality was cut out of messaging bar as part of responsive project
	*/
	addPromo: function(){
		return false;
	},

	addMessageFirst: function(text){
		this.hasMessages = true;
		this.addContent(text,'messages',true);
	},

	addContent: function(text, which, addPrepend){
		if ( text ) {
			if ( this.init() ) {
				if ( typeof text == "string" ) text = $('<span>'+text+'</span>');
				text = text.wrap('<span class="messaging-bar-snippet"></span>').parent();

				if ( this[which].children().length > 0 ) {
					if ( addPrepend ) this[which].prepend(this.sep);
					else this[which].append(this.sep);
				}

				if ( addPrepend ) this[which].prepend(text);
				else this[which].append(text);

				this.display();
			}
		}
	},

	display: function(){

		if ( this.hasMessages ) {
			this.$messagingBarContent
				.html(this.messages);
		} else {

			this.initted = false;
			var $body = $('body');

			$body.removeClass('has-messaging-bar');
			$('#messagingBar',$body).remove();
		}

	},

	clearMessages: function(){
		this.hasMessages = false;
		this.messages.children().remove();
		this.display();
	},

	clearAll: function(){
		this.hasPromos = false;
		this.hasMessages = false;
		this.messages.children().remove();
		this.display();
	}

};

/*
	Worried about removing a function? Don't know where it's used?
	Assign it to 'deprecationStation' for a quick way out.
	Please do your due dilligence when removing functions as this file is used globally
*/

var deprecationStation = function(){
	return false;
};

var callCookieService = deprecationStation;
var lifetechHeaderAjaxCall = deprecationStation;
var updateScmsCmgtLogo = deprecationStation;
var assignScmsClickEventHandler = deprecationStation;
var setCrossDomainCookies = deprecationStation;
var updateHeaderInfo = deprecationStation;
var hideViewCart = deprecationStation;
var assignDropDownHoverEventHandlers = deprecationStation;
var initAddThis = deprecationStation;
var hideEcommerce = deprecationStation;
var assignMyAccountClickEventHandler = deprecationStation;
var hideSCMSAdminLinksForB2BUsers = deprecationStation;
var initCountrySelect = deprecationStation;
var showViewCart = deprecationStation;
var initScmsMenu = deprecationStation;

/*
	DEPRECATED. ApplicationLinks shell has been kept to assist legacy applications utilizing.
	Please do not extend on this.
*/
function ApplicationLinks() {}
ApplicationLinks.prototype.init = deprecationStation;
ApplicationLinks.prototype.setCartScript = deprecationStation;
ApplicationLinks.prototype.setGlobalQuickLinks = deprecationStation;
ApplicationLinks.prototype.setCartLinks = deprecationStation;

ApplicationLinks.prototype.setCloseSessionLink = function () {
	$('#closeSessionLink').attr("href", environmentURL.COMERGENTSERVERSECURE+localizedLink.COMERGENT_CLOSE_SESSION_LINK);
};


var ltCountrySelect = (function(){

	return {

		changeUrlForSelectedCountryLanguage: function(newCountry, newLang) {

			var previousCountry = _lt.user.displayIso;
			var previousLanguage = _lt.user.displayLang;

			setCurrentDomainCookie('CK_LANG_CODE', newLang); //sets language cookie
			setCurrentDomainCookie('CK_ISO_CODE', newCountry); //sets country cookie

			var currentUrl = window.location.protocol+'//'+window.location.host+window.location.pathname+window.location.search;

			if (currentUrl.indexOf("/order/catalog") !==0 ) { // is this comergent?
				window.location.reload(true);
			} else {
				newUrl = currentUrl.replace('/'+previousCountry+'/', '/'+newCountry+'/').replace('/'+previousLanguage+'/', '/'+newLang+'/');
				//otherwise, go to the new page
				window.location.assign(newUrl);
			}

			return;
		}
	};

})();

function initRecentlyViewed(){

	var isoCode = _lt.user.displayIso;
	var langCode = _lt.user.displayLang;

	var visible = false;

	var $dropdownContainer = $('#recently-viewed-dropdown');
	var $galleryContainer;

	var defaultImage = _lt.recentlyViewed.getDefaultImageUrl();

	var status;

	var PAGE_SIZE_ALL = 40;

	var localizedTitle = localizedStrings.RECENTLYVIEWED_TITLE  || "Recently Viewed Items";
	var localizedDelete = localizedStrings.RECENTLYVIEWED_DELETE || "Delete";
	var localizedToday = localizedStrings.RECENTLYVIEWED_TODAY  || "Today";
	var localizedPaginate = localizedStrings.RECENTLYVIEWED_PAGINATE || "{C} of {T}";

	function init(){

		/*
			getItems will return an array of items
		*/
		_lt.recentlyViewed.getItems(function(recentItems){

			if ( recentItems && recentItems.length > 0 ) {

				items = recentItems;

				// only show the 'Recently Viewed' link if we have items
				setupDropdownContainer();

			}

		});

	}

	function setupDropdownContainer(){
		// Inject any HTML needed
		$dropdownContainer.html(
			'<a class="dropdown-toggle" href="#">'+
				'<span class="recently-viewed-icon"></span>'+
			'</a>'+
			'<div id="recently-viewed-container"></div>'
		);

		// Associate gallery container
		$galleryContainer = $('#recently-viewed-container');

		// Show the thing
		$dropdownContainer.show();

		// init event listeners for hovering over our link
		initHoverEventListeners();
	}

	function initHoverEventListeners(){

		function checkHoverCapability() {

			if ( !status ) {

				status = 'loading';
				buildCarousel();
				showCarousel();
				//TSFR-3808. don't log this anymore
				//omni('view');

				$(document).bind('viewport-change',viewportChanged);

			} else {
				if ( status != 'loading' ) {
					showCarousel();
				}
			}

		}

		// hoverIntent is utilized with meganav
		// provides a more natural feel to mouseover/mouseout
		// with 150ms timeout before hide
		var hI = null;
		$dropdownContainer
			.find('> a').bind('touchstart',function(e){

				if ( visible ) hideCarousel();
				else checkHoverCapability();

				e.preventDefault();
				return false;

			}).bind('click',function(e){
				if ( visible ) hideCarousel();
				else showCarousel();

				e.preventDefault();
				return false;
			});

		$dropdownContainer
			.bind('mouseenter',function(e){

				clearTimeout(hI);
				checkHoverCapability();

				e.preventDefault();
				return false;
			})
			.bind('mouseleave',function(e){

				clearTimeout(hI);
				hI = setTimeout(hideCarousel, 150);

				e.preventDefault();
				return false;

			});
	}

	function setProperPageLength(){
		var newViewPort = ltHeader.getCurrentViewportSize();
		switch ( newViewPort ) {
			case 'xl':
			case 'lg':
				pageLength = 5;
				break;
			case 'md':
				pageLength = 4;
				break;
			case 'md':
			case 'sm':
			case 'xs':
				pageLength = PAGE_SIZE_ALL;
				break;
		}
	}

	function viewportChanged(){
		buildCarousel();
	}

	function hideCarousel(){
		visible = false;
		$dropdownContainer.removeClass('active');
		$galleryContainer.removeClass('in');
	}

	function showCarousel(){
		var $parent = $dropdownContainer.closest('.in');

		/*
		The following switch statement will hide open panels in desktop view.
		If you remove this and not protect it with the switch, here's what happens.
		Click recently viewed in smaller views and the X-icon to close
		the overall menu goes away, leading to inconsistent experience.
		*/
		var currentBreakpoint = ltHeader.getCurrentViewportSize();
		switch ( currentBreakpoint ) {
			case "xl":
			case "lg":
			case "md":
				hideOpenHeaderPanels($dropdownContainer, $galleryContainer, $parent);
				break;
		}

		visible = true;
		$dropdownContainer.addClass('active');
		$galleryContainer.addClass('in');
	}

	var totalItems = 0;
	var totalPages = 0;
	var currentPage = 1;
	var pageLength = 5;
	var items = [];
	var $itemsContainer;

	function buildCarousel(){

		setProperPageLength();

		status = 'loaded';

		totalItems = items.length;
		totalPages = Math.ceil(totalItems/pageLength);

		if ( totalItems > 0 ) {

			var navigationHtml = '';
			var galleryClasses = '';

			// do not add navigation elements if there is only one page
			if ( totalPages > 1 ) {

				// Pagination localized text has keys
				// {C} = Current Page
				// {T} = Total Pages
				var paginated = localizedPaginate;
				paginated = paginated.replace('{C}','<span class="carousel-page-current">'+currentPage+'</span>');
				paginated = paginated.replace('{T}','<span class="carousel-page-of">'+totalPages+'</span>');

				navigationHtml += '<div class="carousel-navigation">'+
					'<div class="carousel-pagination">'+paginated+'</div>'+
					'<a href="#" class="carousel-nav carousel-prev">&lsaquo;</a>'+
					'<a href="#" class="carousel-nav carousel-next">&rsaquo;</a>'+
				'</div>';

			} else {
				// add class to carousel items - we can increase width if no pagination
				galleryClasses += ' no-paginate';
			}

			var closeHtml = '<a href="" class="header-icon-toggle"></a>';
			var titleHtml = '<strong class="carousel-title">'+localizedTitle+'</strong>';

			var outHtml = closeHtml + titleHtml + navigationHtml +
				'<div class="carousel-items'+galleryClasses+'"></div>'+
				'';

			$galleryContainer.html(outHtml);
			$itemsContainer = $('.carousel-items',$galleryContainer);
			initCarouselEventListeners();
			showCarousel();
			reInitGalleryItems();
			hideCarousel();
			//reInitGalleryItems needs carousel to be shown to do truncation, 
			//but leaving it open causes it to open on resize of window. 

		} else {

			$dropdownContainer.hide();

		}
	}

	/*
		Loops through a list of items and returns their html
	*/
	function createCarouselGalleryHtml(itemList){

		var galleryHtml = '';
		var lastDate;

		for ( var i = 0; i < itemList.length; i++ ) {
			var product = itemList[i];

			var timestamp = product.timestampFormatted;
			if ( product.isViewedToday ) {
				timestamp = localizedToday;
			}

			var itemClass = '';
			if ( i === itemList.length - 1 ) itemClass = 'item-last';
			else if ( i === 0 ) itemClass = 'item-first';

			product.imageUrl = product.imageUrl.replace("{width}", "250");

			galleryHtml +=
				'<span class="carousel-item '+itemClass+'" data-id="'+product.id+'">'+
					'<a class="item-detail" href="'+product.url+'">'+
						'<div class="item-image">'+
							'<img src="'+product.imageUrl+'" data-alternate="'+product.alternateImageUrl+'" data-default="'+defaultImage+'" alt="'+product.title+'">'+
						'</div>'+
						'<div class="item-description"><div class="item-description-content">'+product.title+'</div></div>'+
						'<div class="item-timeline"></div>'+
						'<div class="item-meta">';
						// only show date if not same as last
						if ( !lastDate || product.timestampFormatted != lastDate ) {
							lastDate = product.timestampFormatted;
							galleryHtml += '<div class="item-date">'+
								'<em class="item-icon-date"></em><span>'+timestamp+'</span>'+
							'</div>';
						}
						if ( product.id ) {
							// Render delete if we have a sku to associate against
							galleryHtml += '<div class="item-delete">'+
								'<em class="item-icon-delete">x</em><span>'+localizedDelete+'</span>'+
							'</div>';
						}
					 galleryHtml +='</div>'+
					'</a>'+
				'</span>';
		}

		var $galleryHtml = $(galleryHtml);
		initCarouselLoadListeners($galleryHtml);
		return $galleryHtml;

	}

	function initCarouselEventListeners(){

		var $prev = $('.carousel-prev',$galleryContainer);
		var $next = $('.carousel-next',$galleryContainer);

		var $close = $('.header-icon-toggle',$galleryContainer);

		$prev.click(prevPage);
		$next.click(nextPage);

		$close.click(function(){
			hideCarousel();
			return false;
		});

	}

	function initCarouselLoadListeners($gallery){

		$('img',$gallery).each(function(){
			var $image = $(this);

			// if image fails to load, try to pull in default instead
			// if default fails we do not want infinite loop so clear it when we do this
			$image.error(function(){
				// Fall back to alternate image if original fails to load
				if ( $image.attr('data-alternate') ) {
					$image.attr('src',$image.attr('data-alternate'));
					$image.removeAttr('data-alternate');
				// If alternate fails, fall back to default
				} else if ( $image.attr('data-default') ) {
					$image.attr('src',$image.attr('data-default'));
					$image.removeAttr('data-default');
				}
			});
		});

		$('.item-delete',$gallery).click(function(e){
			e.stopImmediatePropagation();
			var $this = $(this);
			var $parent = $this.closest('.carousel-item');
			var id = $parent.attr('data-id');
			_lt.recentlyViewed.removeItem(id, function(){
				if ( items.length <= 1 ) {
					hideCarousel();
					$dropdownContainer.hide();
				}
				_lt.recentlyViewed.getItems(function(recentItems){
					items = recentItems;
					buildCarousel();
				 });
			});
			omni('delete',id);
			return false;
		});

		$('.item-detail',$gallery).click(function(e){
			e.stopImmediatePropagation();
			var $this = $(this);
			var $parent = $this.closest('.carousel-item');
			var id = $parent.attr('data-id');
			omni('click',id);
		});

	}

	/*
		Loop through gallery items and add ellipsis if title is too long
	*/
	function fixDescriptionSizing($gallery){

		$('.item-detail',$gallery).each(function(e){
			var $this = $(this);
			var $desc = $('.item-description',$this);
			var $descContent = $('.item-description-content',$this);
			ellipsizeTextBox($desc, $descContent);
		});

	}

	/*
		Compares height of child to parent
		If child is taller, then trim child down and add ellipsis
	*/
	function ellipsizeTextBox($parent, $child) {
		var wordArray = $child.text().split(' ');
		while($child.outerHeight() > $parent.outerHeight()) {
			wordArray.pop();
			$child.text(wordArray.join(' ') + '...');
		}
	}

	/*
		We can use 'slice' to grab an array of items that should be rendered in current view
		pageLength: 5
		currentPage: 1
		start will be 0
		end will be start + 5 = 5
		slice(0,5) => array of 5 items, starting at index 0
	*/
	function getCurrentPageItems(){
		// if user has deleted items and we are now on an empty page, set page back 1
		if ( currentPage > totalPages ) currentPage = totalPages;
		var start = (currentPage-1) * pageLength;
		var end = start + pageLength;
		return items.slice(start, end);
	}

	/*
		utilized to re-draw the gallery when pagination changes
		 - builds gallery html again
		 - updates pagination numbers
	*/
	function reInitGalleryItems(){

		var galleryHtml = createCarouselGalleryHtml(getCurrentPageItems());
		$itemsContainer.html(galleryHtml);

		if ( currentPage == 1 ) {
			$galleryContainer.addClass('page-first');
		} else {
			$galleryContainer.removeClass('page-first');
		}

		if ( currentPage == totalPages ) {
			$galleryContainer.addClass('page-last');
		} else {
			$galleryContainer.removeClass('page-last');
		}

		if ( pageLength == PAGE_SIZE_ALL ) {
			$itemsContainer.css('width', (totalItems * 160) +'px' );
		} else {
			$itemsContainer.css('width', 'auto' );
		}


		$current = $('.carousel-page-current',$galleryContainer);
		$current.text(currentPage);

		// Note: this will not work until carousel has rendered
		fixDescriptionSizing($galleryContainer);

	}

	function prevPage(){

		if ( currentPage > 1 ) currentPage--;
		else currentPage = totalPages; // if already at page 1, go to last page

		reInitGalleryItems();

		return false;
	}

	function nextPage(){

		if ( currentPage < totalPages ) currentPage++;
		else currentPage = 1; // if already at last page, go to first page

		reInitGalleryItems();

		return false;
	}

	function omni(action, detail){
		var actionText = 'recently-viewed|'+action;
		// If we have action detail, note the current page and send detail information (FR16)
		if ( detail ) actionText += '|' + currentPage + '|' + detail;
		_lt.tracking.trackPageEvent({
			eVar34: actionText,
			prop34: actionText
		});
	}


	init();
}



	
/* Bind click event for all search results hyper links
*
*/
$(function(){
	$('a.searchResultsLinksID').click(function () {
		searchSuccessOmniture(this, this.href);
	});
	$('li.searchResultsLinksID a').click(function () {
		searchSuccessOmniture(this, this.href);
	});
	$('a.relatedTopicsLinksID').click(function () {
		relatedTopicsOmniture(this, this.href);
	});
	//Lakshmi: Changes for HPQC ticket 23137
	$('.main-nav a').click(function () {
		trackHeaderClick(this, this.href,$(this).text());
	});
	$('#hfFooterGroupContents  a').click(function () {
	   trackFooterClick(this, this.href,$(this).text());
	});
	$('.our-products a').click(function () {
		trackOurProductsClick(this, this.href,$(this).text());
	});
	$('#countrySelectDialog a').click(function() {
		trackCountrySelect(this, this.href,$(this).text().substring(1));
	});
	$('#countrySelectGoButton').click(function() {
		trackCountrySelect(this, this.href,$("#countrySelect option:selected").text());
	});
});

function trackCountrySelect(linkVar, linkHref,linktext) {
	var s=s_gi(environmentURL.OMINITUREENV);
	s.linkTrackVars='prop61';
	s.prop61='countryselect:'+removeSpecialChars(linktext)+'|'+s.pageName;
	s.tl(linkVar,'o','Country Select');

}

/*Lakshmi: Changes for HPQC ticket 23137 */
/**Ominiture code for tracking Header link clicks
*/
function trackHeaderClick(linkVar, linkHref,linktext) {
	var s=s_gi(environmentURL.OMINITUREENV);
	s.linkTrackVars='prop61';
	s.prop61='H:'+removeSpecialChars(linktext)+'|'+s.pageName;
	s.tl(linkVar,'o','Header Click');

}
/**Ominiture code for tracking Footer link clicks
*/
function trackFooterClick(linkVar, linkHref,linktext) {
	var s=s_gi(environmentURL.OMINITUREENV);
	s.linkTrackVars='prop61';
	s.prop61='F:'+removeSpecialChars(linktext)+'|'+s.pageName;
	s.tl(linkVar,'o','Footer Click');
}
/**Ominiture code for tracking Our Products link clicks
*/
function trackOurProductsClick(linkVar, linkHref,linktext) {
	var s=s_gi(environmentURL.OMINITUREENV);
	s.linkTrackVars='prop61';
	s.prop61='ourproducts:'+removeSpecialChars(linktext)+'|'+s.pageName;
	s.tl(linkVar,'o','OurProducts Click');

}


/* Bind click event for all search results hyper links. This method is needed as call back from modal windows(Microcontent.js)
* as javascript is not loaded in modal windows(MSDS, Vectors, Manuals, Images links under Product information)
*/
function trackSearchSuccess () {
	$('a.searchResultsLinksID').click(function () {
		searchSuccessOmniture(this, this.href);
	})
	$('#MSDSResultsID a').each(function() {
		if($(this).attr('tagName')=='A') {
			$(this).click(function () {
				searchSuccessOmniture(this, this.href);
			})
		}
	});
}
/* 
	This method captures Omniture events & properties for search results
	NOTE 201405 - Used by FAST
*/
function searchSuccessOmniture(linkVar, linkHref){
	var s=s_gi(environmentURL.OMINITUREENV);
	s.linkTrackVars='events,evar14';
	s.linkTrackEvents='event14';
	s.events='event14';
	s.evar14 ='Search Results';
	s.prop14='Search Results';
	s.prop48 = getURLPath(linkHref);
	s.tl(linkVar,'o','Search Success');
}

/* 
	This method captures Omniture events & properties for related topics search results
*/
function relatedTopicsOmniture(linkVar, linkHref){
	var s=s_gi(environmentURL.OMINITUREENV);
	s.linkTrackVars='evar15, events';
	s.linkTrackEvents='events';
	s.events='event14';
	s.evar15 ='Related Topics';
	s.prop15='Related Topics';
	s.prop48 = getURLPath(linkHref);
	s.tl(linkVar,'o','Search Success');
}
/*
	Below method calls Comergent URL to close b2b session.
*/
function closeSession() {
	window.location.assign("https://"+environmentURL.COMERGENTSERVER+"/en/US/procurement/lt?cmd=PunchInOrder&mode=Cancel");
}

/*
	Use to do quite a bit more - hsa a slight delay before redirecting user
*/
function clearCloseSessionCookies() {
	window.setTimeout(closeSession,1000);
}
///  ----  Exceptions objects   ----
var InvalidUrlException = function (message){
	this.type = "InvalidUrlException";
	this.message = message;
};

var DOMElemNotFoundException = function (message){
	this.type = "DOMElemNotFoundException";
	this.message = message;
};
/// END OF Exceptions objects



function initLegacyEventHandlers(){

	$('.opt3 .billboard-menu li a').click(function(){

		var i = $(this).parent().index()+1;

		$('.opt3bb').fadeOut('fast');
		$('.bb'+i).fadeIn('fast');

	});

	$('.tabs .tabs-menu').find('li:eq(0)').addClass('active');
	$('.tabs .tabs-panels').find('div:eq(0)').show().siblings().hide();
	$('.tabs .tabs-menu input').click(function(){

		var clicked = $(this).parent().attr('for'),
		panelID = clicked+'-panel';

		$(this).parents('li').addClass('active').siblings().removeClass('active');
		$('#'+panelID).show().siblings().hide();

	});

	$('.tabs .tabs-menu a').click(function(e){

		var clicked = $(this).attr('href');

		$(this).parents('li').addClass('active').siblings().removeClass('active');
		$(clicked).show().siblings().hide();

		e.preventDefault();

	});

	/* changed active to opened class because it is used in main-nav class where it doesnt work in IE6 by jthiyyadi@deloitte.com */
	// 2016-06 UTILIZED ON CART PAGE FOR RESERVE NUMBER
	$('.toggler').click(function(e){

		if($(this).is('.opened')) {
			$(this).removeClass('opened').next('.toggle-panel').slideUp('fast');
		} else {
			$(this).addClass('opened').next('.toggle-panel').slideDown('fast');
		}

		e.preventDefault();
	});


	$(".show-validation-error").click(function () {
		$(".error-message").show();
		$(".error-ribbon").show();
		$(".text-input").css("border-color","#cc0000");
		return false;
	});

	$(".show-redeem-quote-error").click(function () {
		$(".error-message").show();
		$(".error-message").css("color","#fff");
		$(".text-input").css("border-color","#cc0000");
		return false;
	});

	$(".show-select-billing").click(function () {
		$(".tabs-panels .select-billing-panel").show();
		$(".tabs-panels .select-address").hide();
		return false;
	});

	$(".new-billing-address .new-billing").click(function () {
		$(".new-billing-address-form").show();
		return false;
	});

	$(".address-complete").click(function () {
		$(".address-complete-panel").show();
		$(".tabs-panels .select-billing-panel").hide();
		return false;
	});

	$(".edit-shipto-addrerss").click(function () {
		$(".edit-shipto").show();
		$(".billto").hide();
		$(".shipto").hide();
		return false;
	});

	$(".complete").click(function () {
		$(".edit-shipto").hide();
		$(".shipToAddress").hide();
		$(".billto").show();
		$(".shipto").show();
		return false;
	});


	$('.drop-filters').hover(function(){
		$(this).find('>a').addClass('active');
		$(this).find('ul').show();
	},function(){
		$(this).find('>a').removeClass('active');
		$(this).find('ul').hide();
	});


	$('.billboard-menu a').click(function() {

		var clicked = $(this).attr('href'),
		highlight = clicked.replace('#','');

		$(this).parent().addClass('active').siblings().removeClass('active');
		$(this).closest('.billboard').removeClass().addClass('billboard group '+highlight);
		$(clicked).addClass('active').fadeIn(400).siblings().removeClass('active').fadeOut(400);

		return false;

	});

	$('.slide .secondary-button').click(function() {

		$(this).parents('.slide-caption').fadeOut('fast').prev('.more-info').fadeIn('fast');

		return false;

	});

	$('.slide .close').click(function() {

		$(this).parents('.more-info').fadeOut('fast').next('.slide-caption').fadeIn('fast');

		return false;

	});

	$('.billboard').mouseover(function(){
		clearInterval(rotateInterval);
	});

	if ( $('.billboard').length > 0 ) {
		var rotateInterval = setInterval(rotateSpace, 3000);
	}

}

function rotateSpace(){
	var activeItem = $('.billboard-menu li.active');

	if (activeItem.index() == 3) {
		$('.billboard-menu li').eq(0).find('a').trigger('click');
	} else {
		activeItem.next().find('a').trigger('click');
	}
}


/*
	Hide breadcrumbs for B2B and Master Users
*/
function removeBreadcrumbsForB2BUsers(){
	if ( _lt.user.isMasterUser || _lt.displayTypeMatch('B2B') ) {
		$('.page-utility .breadcrumb, .page-utility .breadcrumbs').each(function(){
			if ( $(this).hasClass('breadcrumb-hide-restricted-only') ) {

				$('.breadcrumb-hide-restricted',$(this)).remove();

			} else $(this).remove();
		});
	}
}

function initB2BMasterUserLoginChecks(){
	/* Master user check for header account dropdown links and meganav order sections */
	if ( _lt.user.isMasterUser ) {

		$(".meganav a[href*='WorkspaceDataDisplay'], #hfMyAccountOptions a").live('click',function(){
			var myHREF = $(this).attr('href');
			if ( myHREF.indexOf('cmd=') >= 0 && myHREF.indexOf('Logout') == -1 && myHREF.indexOf('IVGNMyActivityDisplay') == -1 ) {
				return redirectIfUserUnidentified(false, $(this).text(), $(this).attr('href'), false, false, $(this).attr('data-auth-message'), $(this));
			}
			return true;
		});
	}
}
/*Variables for the meganav delay and display of opacity */
meganavnamespace={};
meganavnamespace.bLeftTheMenu=true;
meganavnamespace.meganavDisplayDelay=450;
meganavnamespace.meganavOpacityDelay=450;

function initCustomerServiceNumber() {
	if ( window.ltCountryInfo ) {
		var isoCode = _lt.user.getInfo('displayIso','us');
		var phone = ltCountryInfo[isoCode].phone;
		$('#hfCustomerServiceNumber').after(phone);
	}
}


/* Added below function to assign drop down functionality to minicart on hover.
 * Mincart will drop down on hover and close on drop down looses focus.
 */

function assignMiniCartClickEventHandler() {

	var $miniCartContainer = $('#miniCartButton');
	var $miniCartToggle = $('#viewMiniCart');

	$miniCartContainer
		.bind('mouseenter',function(e){
			if ( !miniCart.visible ) {
				miniCart.showCart();
				if (ltHeader.getCurrentViewportSize() =='sm' || ltHeader.getCurrentViewportSize() == 'xs'){
					$(".content, .MainParsys, #pdp-content, .globalFooter, .footer").css("display", "none");
				}
			}
			e.preventDefault();
			return false;
		})
		.bind('mouseleave',function(){
			miniCart.hideCart();
			if (ltHeader.getCurrentViewportSize() =='sm' || ltHeader.getCurrentViewportSize() == 'xs') {
					$(".content, .MainParsys, #pdp-content, .globalFooter, .footer").css("display", "block");
				}
		});

	$miniCartToggle
		.bind('touchstart',function(e){
			if ( !miniCart.visible ) {
				miniCart.showCart(true);
				if (ltHeader.getCurrentViewportSize() =='sm' || ltHeader.getCurrentViewportSize() == 'xs' && $('#miniCartHeaderTotalItems').html() !== "" ){
					$(".content, .MainParsys, #pdp-content, .globalFooter, .footer").css("display", "none");
				}
			} else {
				hideOpenHeaderPanels();
				miniCart.hideCart();
				if (ltHeader.getCurrentViewportSize() =='sm' || ltHeader.getCurrentViewportSize() == 'xs') {
					$(".content, .MainParsys, #pdp-content, .globalFooter, .footer").css("display", "block");
				}
			}
			e.preventDefault();
			return false;
		})
		.bind('touchstop',function(e){
			e.preventDefault();
			return false;

		})
		.bind('click',function() {
			miniCart.goCheckout();
			return false;
		});
}


function initMiniCart(){
	var url = "//" + environmentURL.WCMSERVER + '/shared-static/scripts/minicart.js';
	var script = document.createElement('script');
	script.type = 'text/javascript';
	script.src = url;
	document.getElementsByTagName("head").item(0).appendChild(script);
	assignMiniCartClickEventHandler();
}


function initGlobalHeaderPromo(){
	if ( window.globalHeaderPromoConfig ) {

		for ( var promoKey in globalHeaderPromoConfig.Promos ) {
			var thisPromo = globalHeaderPromoConfig.Promos[promoKey];
			var url = thisPromo.URL;
			var heading = thisPromo.Text;
			var subtitle = thisPromo.LinkText;

			if ( heading ){

				$('body').addClass('has-promo-bar');

				var currentDate = new Date();
				if ( thisPromo.startdate && thisPromo.startdate > currentDate ) continue;
				if ( thisPromo.enddate && thisPromo.enddate < currentDate)  continue;

				// Trim display type - doing this instead of using .trim() since it is not supported by IE8
				var trimmedDisplayType = thisPromo.DisplayTypes;
				!!trimmedDisplayType && (trimmedDisplayType = trimmedDisplayType.replace(/^\s*|\s*$/g, ''));

				if ( thisPromo.DisplayTypes && !_lt.displayTypeMatch( trimmedDisplayType ) ) continue;
				if ( thisPromo.ISO && _lt.displayIsoMatch( thisPromo.ISO ) ) continue;

				var $detail;
				if ( url ) $detail = $('<a class="promo-bar-snippet" href="'+url+'"></a>');
				else $detail = $('<span class="promo-bar-snippet" href=""></span>');

				var $promotitle= $('<strong>'+heading+'</strong> ');

				if ( url ) subtitle += "<em>&rsaquo;</em>";
				var $promosubtitle = $('<span> '+subtitle+'</span>');

				$promotitle.appendTo($detail);
				$promosubtitle.appendTo($detail);
				$detail.appendTo($('#promoBarContent'));
				$('#promoBar').show();

			}
			//Promo displayed - let's return true
			return true;
		} //Promo Loop
	} //Config Check
	//Promo did not display.. Return false.
	return false;
}


function initMeganavHoverHandlers(){
	// Sometimes authors place custom jQuery versions down that override existing plugins
	// This wont fix the page but will prevent JS error
	if ( !!$.fn.hoverIntent ) {
		// hoverIntent allows for 150ms delay in hide/show
		$('.meganav > li').hoverIntent({
			over: function showMenu() {
				$(this).addClass('active').addClass('in');
				var $jq = (typeof $j == "function") ? $j : $;
				$jq('.searchAutoCompleteProviderSelector').trigger('chosen:close');
			},
			timeout: 150,
			out: function hideMenu() {
				$(this).removeClass('active').removeClass('in');
			}
		});
	}
}

var B2bmessaging = {

	Messenger: {

		logoCacheCookie : 'CK_B2B_PRTNR_LOGO',
		wrapDivSelector : '.b2b-msg-wrapper',
		msgDivSelector : '.b2b-message',

		initB2bLogoAndMessage: function(webServiceUrl) {

			var uKey = getB2bUserKey();
			if (uKey!=null) {
				var cacheUrl = getCookie(this.logoCacheCookie);
				if( $(this.msgDivSelector).length > 0 || !(cacheUrl) ) { //if message DIV present || URL cookie not present
					this.callJSON(webServiceUrl, uKey);//send JSON cuz we're not caching messages ever anyhow
				} else if (cacheUrl) {
					B2bmessaging.Messenger.renderPartnerLogo(cacheUrl);
				}
			}
		} ,

		callJSON : function(webServiceUrl, key) {

			$.getJSON(webServiceUrl+ "?cmd=PreviewPartnerDetails&userKey="+key+"&callback=?", B2bmessaging.Messenger.callback);

		},

		callback : function(data) {

			//var prtnrMessage = "Hi too much <b>content</b>.<br/> Hi too much <b>content</b>. <br/>Hi too much <b>content</b>.<br/> Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. Hi too much <b>content</b>. "//data.PromoMessage;
			var prtnrMessage = data.PromoMessage;
			var partnerLogoUrl = data.PartnerLogoURL;

			if (partnerLogoUrl) {
				B2bmessaging.Messenger.renderPartnerLogo(partnerLogoUrl);
				B2bmessaging.Messenger.cachePartnerLogo(partnerLogoUrl);
			}

			if (prtnrMessage) {
				B2bmessaging.Messenger.displayMessage(prtnrMessage);
			}

		},

		renderPartnerLogo : function (partnerLogoUrl) {
			if ( partnerLogoUrl.length > 0 ) {
				var partnerLogoHTML = '<img class="prtnr partner-logo" src="'+partnerLogoUrl+'"/>';
				messagingBar.addMessageFirst(partnerLogoHTML);
			}
		} ,

		cachePartnerLogo : function (partnerLogoUrl) {
			setCookie(this.logoCacheCookie,partnerLogoUrl);
		},

		displayMessage : function (msg) {
			$(this.msgDivSelector).append(msg);
			$(this.wrapDivSelector).show();
		}
	}

};


function initCSRDisplay(){
	if ( _lt.user.isCSR ) {
		var csrURL = environmentURL.COMERGENTSERVERSECURE+localizedLink.MY_ACCOUNT_LINK_CSR;
		messagingBar.addMessage('<a href="'+csrURL+'">CSR Home &rsaquo;</a>');
	}
}

function initGreeting() {

	//Set name for user welcome message.
	var customerName = decode_utf8(_lt.user.getInfo('customerName')); //decode_utf8(decodeURIComponent(getValueFromCookieData(getCookie('CK_CUSTOMER_INFO'), 'customerName')));

	var langCode = _lt.user.displayLang;

	if (customerName && customerName.length) {
		// Add 'Your Account' text at the end of the name, change part of HPQC 25581.
		//Lakshmi- Changes for HPQC 20333- Change Japan/Japanese logged in user greeting format
		if( langCode == 'ja' ) {
			$('#hfCustomerName').text(customerName+" "+localizedStrings.GREETING);
		}
		else {
			$('#hfCustomerName').text(customerName);
		}
		$('#hfCustomerNameLi').show();
		$('#hfGreetByName').css('display','inline-block'); //.show() was setting this to display:list-item at times, which caused header distortion
		$('#hfGreetByName').append($('#myaccount-div'));
	} else {
		$('#hfGreetAnonymous').css('display','inline-block'); //.show() was setting this to display:list-item at times, which caused header distortion
		$('#hfGreetAnonymous').append($('#myaccount-div'));
	}
	$('#myaccount-div').css('max-height', 'calc(100vh - 100px)');
}

//To display edit mode labels for B2B user.
function initB2BEditMode() {
	if (isB2bDisplayType() || getIsB2BCustomerType() || getIsMaster()) {
		var b2bModeType = getCookie("CK_B2B_MODE");
		if( b2bModeType ) {
			b2bModeType = b2bModeType.toUpperCase();
			if(b2bModeType == 'EDIT'){
				showB2BEditModes("hfB2BEditMode","Edit Mode");
			} else if(b2bModeType == 'CREATE'){
				showB2BEditModes("hfB2BCreateMode","Create Mode");
			} else if(b2bModeType == 'INSPECT'){
				showB2BEditModes("hfB2BInspectMode","Inspect Mode");
				$('#hfGreetByName').hide();
				$('#hfGreetAnonymous').hide();
			}
		}
	}
}

function showB2BEditModes(styleClass, text){
	//$('#hfPartnerLogo').show();
	if(text == 'Inspect Mode'){
		var partnerLogoUrl = getCookie("CK_B2B_PRTNR_LOGO");
		B2bmessaging.Messenger.renderPartnerLogo(partnerLogoUrl);
	}
	messagingBar.addMessage(text);
}

function hideOpenHeaderPanels(){

	$active = $('.global-commerce-bar .in, #header-nav-container .in, .global-commerce-bar .active, #header-nav-container .active');
	$body = $('body').removeClass('header-nav-in').removeClass('header-nav-l1-in').removeClass('header-nav-l2-in');
	

	if ( arguments && arguments.length > 0 ) {
		for ( var i = 0; i < arguments.length; i++ ) {
			$active = $active.not(arguments[i]);
		}
	}

	if ( window.miniCart ) miniCart.hideCart();
	
	$active.removeClass('in').removeClass('active');
}

function toggleHeaderElementHandler($elm, $par){

	var $body = $('body');
	var selector = $elm.attr('data-target');
	var $target = $(selector);

	if ( $elm.hasClass('active') ) {
		$elm.removeClass('active');
		$target.removeClass('in');
		$('.dim-background').trigger('closedimbg');
	} else {
		$elm.addClass('active');
		$target.addClass('in');
		$('.dim-background').trigger('opendimbg');
	}

	var $nav = $elm.closest('#header-nav-container');
	if ( $nav.length === 0 ){
		$body.removeClass('header-nav-in');
	}

	hideOpenHeaderPanels($elm, $target, $par);

}

// MOVE HEADER UTILITIES TO & FROM THEIR ORIGINAL CONTAINERS
// INTO THE MOBILE NAV DEPENDING ON VIEWPORT CHANGE.
function initMobileHeaderTransformations(){

	var currentBreakpoint = ltHeader.getCurrentViewportSize();
	var closeThreshold = 50;

	var $body = $('body');

	//Mobile Nav Drawers
	var $drawer1 = $('#mobile-nav-drawer-1');
	var $drawer2 = $('#mobile-nav-drawer-2');

	// Containers
	var $recentlyViewedContainer = $('#headerRecentlyViewed');
	var $utilityBar = $('#user-utility-bar');

	// Utilities
	var $recentlyViewed = $('#recently-viewed-dropdown');
	var $contactUs = $('#hfCustomerServiceLi');
	var $quickOrder = $('#hfBarQuickOrder');
	var $cloudLink = $('#hfCloud');
	var $accountDropdown =$('#hfGreetByName,#hfGreetAnonymous');

	var $meganav = $('#meganav-list, #meganav-content');
	var $headerTopLevel = $meganav.children();
	var $headerGalleries = $headerTopLevel.filter('.nav-gallery');
	var headerTopLevelList = [];

	$headerTopLevel.each(function(i,e){
		var $el = $(this);
		$el.attr('data-index-initial',i);
		headerTopLevelList.push($el);
	});

	// DOM modifications for utilities
	var Large = function() {
		$quickOrder.prependTo($utilityBar);
		$accountDropdown.prependTo($utilityBar);
		$contactUs.prependTo($utilityBar);
		$cloudLink.prependTo($utilityBar);
		if($('.sticky-search').length !== 0) {
			$cloudLink.addClass('hidden');
		} else {
			$cloudLink.removeClass('hidden');
		}
		$recentlyViewed.appendTo($recentlyViewedContainer);
		reOrderTopLevel(false);
	};

	var Medium = function() {
		$recentlyViewed.appendTo($recentlyViewedContainer);
		$accountDropdown.prependTo($drawer2);
		$contactUs.prependTo($drawer2);
		$quickOrder.prependTo($utilityBar);
		$cloudLink.remove();
		reOrderTopLevel(true);
	};

	var Small = function() {
		$quickOrder.prependTo($drawer1);
		$accountDropdown.prependTo($drawer2);
		$contactUs.prependTo($drawer2);
		$recentlyViewed.prependTo($drawer2);
		$cloudLink.remove();
		reOrderTopLevel(true);
	};

	/*
		Keeps the order of L1s preserved for desktop
		But places all galleries last for mobile
	*/
	function reOrderTopLevel(isPushGalleryLast){
		$headerTopLevel.each(function(i,e){
			var $el = $(this);
			if ( isPushGalleryLast ) {
				// In gallery mode, put galleries last
				// Last normal elements where they are
				if ( $el.is('.nav-gallery') ) $meganav.append($el);
			} else {
				$meganav.append($el);
			}
		});
	}

	/*
		Add feature to overwrite text by breakpoints
		The concept of changing the title text for this component is like the adaptive image component.
	*/
	function updateTitleText() {
		var newViewport = ltHeader.getCurrentViewportSize();
		var titles = $('#meganav-container').find('span[data-title-default]');
		$.each(titles, function(index, item) {
			var titletext = $(item).attr("data-title-" + newViewport);
			if (titletext) {
				($(item).find('b').length !== 0) ? $(item).find('b').text(titletext): $(item).text(titletext);
			} else {
				($(item).find('b').length !== 0) ? $(item).find('b').text($(item).attr('data-title-default')): $(item).text($(item).attr('data-title-default'));
			}
		});
	}
	$(document).ready(function() {
        triggerMegaNavHesitation();
        IeCursorFix();
        IeMondrianLinkDisplay()
        updateTitleText();
        $('#meganav-content').show();
    });

	//  Sticky header
	$(document).scroll(function () {
        var scroll = $(this).scrollTop();

        //do not activate scroll for viewports lower than  979
        if ((scroll) && ($(window).width() > 979)) {
            // hide utility bar elements
            $("#header-nav-container,#hfCloud, #hfCustomerServiceLi, #hfGreetByName, #hfGreetAnonymous, #hfBarQuickOrder").addClass("hidden");
            
            // turn on sticky
            $(".globalHeader").addClass("sticky-header");
            $("#primarySearch").addClass("sticky-search");

        } else {
        	// show utility bar elements
            $("#header-nav-container, #hfCloud, #hfCustomerServiceLi, #hfGreetByName, #hfGreetAnonymous, #hfBarQuickOrder").removeClass("hidden"); 
            
            // turn off sticky
            $('.globalHeader').removeClass("sticky-header"); 
            $("#primarySearch").removeClass("sticky-search");
        }
    });
	
	var inputHasfocus;
    function IeCursorFix() {
            /*$(".meganav>li, recently-viewed-dropdown, .user-utility-link, .user-utility-item, #suggest1, #myaccount-div, #recently-viewed-dropdown").mouseenter(function () {

                if($("input").is(":focus") || $("select").is(":focus")) {
                    inputHasfocus = $(document.activeElement);
                    inputHasfocus.blur();
                    inputHasfocus.not("#suggest1").blur();
                }
            });
            $(".meganav>li, recently-viewed-dropdown, .user-utility-link, .user-utility-item, #suggest1, #myaccount-div, #recently-viewed-dropdown").mouseleave(function () {
                if(inputHasfocus !=null) {
                    inputHasfocus.focus();
                }
            });*/

    }
    function IeMondrianLinkDisplay(){
    	//$.browser will be deprecated on jquery >1.9.1
        if($.browser && parseInt($.browser.version) <= 10){
            $('.mondrian-module-list UL LI .btn-flat').addClass('is-ie-nine')
        }
	}
    function triggerMegaNavHesitation() {
        $(".meganav > li > ul,#myaccount-button").mouseleave(function () {
            $(this).addClass("opacity").delay(meganavnamespace.meganavOpacityDelay).queue(function (next) {
                meganavnamespace.bLeftTheMenu=true;
            	$(this).parent().removeClass("is").removeClass("active");
            	$(this).removeClass("opacity");
                next();
            });
        });

        $("ul.meganav ").mouseleave(function () {

            $(".meganav .active").children().addClass("opacity").delay(meganavnamespace.meganavOpacityDelay).queue(function (next) {
                meganavnamespace.bLeftTheMenu=true;
                $(".meganav .active").removeClass("is").removeClass("active");
                $(".meganav .opacity").removeClass("opacity");
                $('.dim-background').trigger('closedimbg');
                next();
			});
						
        });
        $(window).click(function(){
            meganavnamespace.bLeftTheMenu=true;
            $('.opacity').parent().removeClass("is").removeClass("active");
            $('.opacity').removeClass("opacity");
        });
    } // Set nav dropdown opacity to .95 on mouse out for 1.5 sec. and remove
	$(document).bind('viewport-change', function() {
		updateTitleText();
	});

	function triggerViewportChange(){
		currentBreakpoint = ltHeader.getCurrentViewportSize();
		switch ( currentBreakpoint ) {
			case "xl":
			case "lg":
				Large();
				break;
			case "md":
				Medium();
				break;
			case "sm":
			case "xs":
				Small();
				break;

		}
	}

	function isStackedBreakpoint(){
		return currentBreakpoint == 'xs' || currentBreakpoint == 'sm' || currentBreakpoint == 'md';
	}


	/*
		To allow touch AND click events
			<a href="{url}" class="toggle-touch" data-target="#target">{title}</a>
			<div id="target"></div>

			On click, link will be traveled to
			On TOUCH, target will be toggled
			On HOVER, target will be toggled

			.toggle-touch element will have '.active' applied
			target will have '.in' applied
	*/
	$('.toggle-touch').each(function(i){

		var $elm = $(this);
		var $target = $($elm.attr('data-target'));

		var isToggled = false;
		var closeTimeout;

		var show = function(e){

			clearTimeout(closeTimeout);
			isToggled = true;
            var $jq = (typeof $j == "function") ? $j : $;
			var $par = $elm.closest('.in');
			$elm.addClass('active');
			$('.dim-background').trigger('opendimbg');
			$target.addClass('in');
			$('#header-typeahead').hide();
			$jq('.searchAutoCompleteProviderSelector').trigger('chosen:close');

			/*
			Gotta run checks on ANONYMOUS & LOGGED IN elements since
			DOM manipulation puts them in different places.
			*/
			if ($elm.is('#hfUserProfileLink') || $elm.is('#myaccount-button')) {
				/*
				For these elements, be specific on which view to fire off the hide open panels callback.
				If you didn't wrap a check to it, clicking signed in/my account elements in smaller views,
				will remove the mobile X-icon to go away, leading to inconsistent menu experience.
				*/
				var currentBreakpoint = ltHeader.getCurrentViewportSize();
				switch (currentBreakpoint) {
					case "xl":
					case "lg":
						hideOpenHeaderPanels($elm, $target, $par);
						break;
				}
			} else {
				hideOpenHeaderPanels($elm, $target, $par);
			}

			if ( e ) e.preventDefault();
			return false;
		};

		var hide = function(e){

			closeTimeout = setTimeout(function(){
				isToggled = false;

				$elm.removeClass('active');
				$target.removeClass('in');
                $('.dim-background').trigger('closedimbg');
			}, closeThreshold);

			if ( e ) e.preventDefault();
			return false;
		};

		$elm
			.bind('touchstart', function(e){
				if ( isToggled ) hide(e);
				else show(e);
			})
			.bind('mouseover', show)
			.bind('mouseout', hide)
			.bind('click',function(e){
				console.log('click toggle-touch');
			});

		$target
			.bind('mouseover',function(e){
				clearTimeout(closeTimeout);
			})
			.bind('mouseout',hide);
	});

	// toggle-touch" data-toggle="#search-main"
	$('.toggle-click').bind('click',function(e){
		toggleHeaderElementHandler($(this));
		e.preventDefault();
		return false;
	});

	// trigger-touch" data-toggle="#search-main"
	$('.trigger-touch').bind('click',function(e){
		var target = $(this).attr('data-target');
		$(target).trigger('touchstart');

		e.preventDefault();
		return false;
	});

	function assignMeganavTouchTogglers($par, level){

		$par.each(function(){

			var $l1 = $(this);

			var $a = $('> a', $l1);
			var $span = $('> span', $l1);
			var $list = $('> ul', $l1);

			var closeTimeout;

			var show = function(e){
                var $jq = (typeof $j == "function") ? $j : $;
				clearTimeout(closeTimeout);

				if (!isStackedBreakpoint()){
					$(".meganav > li").removeClass('in active');
					$('.dim-background').trigger('closedimbg');
				}
				$('#suggest1').blur();
				$l1.addClass('in active');
				$('.dim-background').trigger('opendimbg');
				$('.searchAutoCompleteProviderSelector').one('chosen:hiding_dropdown', function (e) {
					$('#suggest1').blur();
				});
				$('#header-typeahead').hide();
				$jq('.searchAutoCompleteProviderSelector').trigger('chosen:close');
				$body.addClass('header-nav-'+level+'-in');

				if ( e ) e.preventDefault();
				return false;
			};

			var hide = function(e){

				closeTimeout = setTimeout(function(){
					$l1.removeClass('in active');
					$body.removeClass('header-nav-'+level+'-in');
					$('.dim-background').trigger('closedimbg');
				}, closeThreshold);

				if ( e ) e.preventDefault();
				return false;
			};

			// L1 Anchor Click/Touch Events
			$a
				.bind('click',function(e){
					// navigate if not a dropdown
					if ( $list.length > 0 && isStackedBreakpoint() ) {
						!!e && e.preventDefault();

						// otherwise trigger touchstart if on mobile
						$a.trigger('touchstart');
						return false;
					}
				})
				.bind('touchstart',function(e){
					// navigate if not a dropdown
					if ( $list.length > 0 && ( !$l1.is('.nav-gallery') || !isStackedBreakpoint() ) ) {
						!!e && e.preventDefault();

						if ( $l1.is(".in") && $l1.is(".active") ) hide(e);
						else show(e);
					}
				});

			// L1 Span Click/Touch Events
			$span
				.bind('click',function(e){
					// navigate if not a dropdown
					if ( $list.length > 0 && isStackedBreakpoint() ) {
						// otherwise trigger touchstart if on mobile
						$span.trigger('touchstart');
						return false;
					}
				})
				.bind('touchstart',function(e){
					// navigate if not a dropdown
					if ( $list.length > 0 && ( !$l1.is('.nav-gallery') || !isStackedBreakpoint() ) ) {
						e.preventDefault();
						if ( $l1.is(".in") && $l1.is(".active") ) hide(e);
						else show(e);
					}
				});

            var menuDisplayTimer=null;
			// Desktop hover listeners
			$l1
				.bind('mouseover', function(e){
                    // Basic hoverIntent only for large and uphttp://imgur.com/gallery/Q3cUg29
                    $('.opacity').stop(true).removeClass("opacity");
                    if ( !isStackedBreakpoint() ) {

                        if (!meganavnamespace.bLeftTheMenu) {
                            show(e)
                        }
                        else {
                            menuDisplayTimer = setTimeout(function () {
                                meganavnamespace.bLeftTheMenu=false;
                                // otherwise trigger touchstart if on mobile
                                show(e);
                            }, meganavnamespace.meganavDisplayDelay);
                        }

                    }
                }).bind('mouseout', function(e){
                // Basic hoverIntent only for large and uphttp://imgur.com/gallery/Q3cUg29
                if( !$(this).children().children().is('a, span, img, li')){
                    meganavnamespace.bLeftTheMenu=false;
                }
				if ( !isStackedBreakpoint() && meganavnamespace.bLeftTheMenu) {
                	if(menuDisplayTimer!=null){
                        clearTimeout(menuDisplayTimer);
					}
					meganavnamespace.bLeftTheMenu=true;
                    // otherwise trigger touchstart if on mobile
                    hide(e);

                }
            });
		});

	}

	//var $meganav = $('#meganav-content');

	var $meganav_l1 = $('> li', $meganav);
	var $meganav_l2 = $('> ul .nav-grouping-group',$meganav_l1);

	assignMeganavTouchTogglers($meganav_l1, 'l1');
	assignMeganavTouchTogglers($meganav_l2,'l2');


	$('#header-nav-button').bind('click',function(e){

		var $this = $(this);
		var $target = $($this.attr('data-target'));

		toggleHeaderElementHandler($this, $target);

		if ( $target.hasClass('in') ){
			$body.addClass('header-nav-in');
		} else {
			$body.removeClass('header-nav-in');
		}

		e.preventDefault();
		return false;
	});

	triggerViewportChange();
	$(window).bind('resize',triggerViewportChange);

}

/* Hack required because we can no longer make changes
 to the Instrument management portal app. The app forces all IE users
 to use IE7 css but IE7is no longer supported anyway. */
$('link[href="/mylifeportal/adf/styles/cache/portal-desktop-r38zkz-en-ltr-ie-7.0-cmp.css"]').attr('href', '/mylifeportal/adf/styles/cache/portal-desktop-cp532q-en-ltr-ie-8.0-cmp.css');
$('link[href="/mylifeportal/adf/styles/cache/portal-desktop-r38zkz-en-ltr-ie-7.0-cmp2.css"]').attr('href', '/mylifeportal/adf/styles/cache/portal-desktop-cp532q-en-ltr-ie-8.0-cmp2.css');


var gcbPositioning = function () {
	var headerSeparatorPosition = 0;
	var gcbPosition = $(".global-commerce-bar-spacing").position();
	// whenheader wraps in two lines
	if (gcbPosition && gcbPosition.top == 145) {
		$(".globalHeader").addClass('header-padding')
		headerSeparatorPosition = '108px';
		// when spacing bar disappears
	} else if (gcbPosition && gcbPosition.top == 0) {
		headerSeparatorPosition = '0px';
		// all other cases
	} else {
		headerSeparatorPosition = '69px';
	}
	// check if the element exists
	if(document.getElementById("headerSeparator")){
		document.getElementById("headerSeparator").style.height = headerSeparatorPosition;
	}
}

  function checkValideversionForPost  (){
	
	var isValid=true;
	
	if((clientLibsDetails.jqueryVersion || clientLibsDetails.$Version || clientLibsDetails.$jVersion || clientLibsDetails.$cqVersion) =='1.8.1' ){isValid=false;}
	
	if(clientLibsDetails.bootstrapVersion=='Standard' || clientLibsDetails.compatibilityMode=='true' || clientLibsDetails.iFrame=='true'){isValid=false;}
	
	return isValid;
	}
  
  function blacklistUrlPatternsForPageInfo (){
	 
	  var shouldFirePageInfoCall =true;
	  var blacklistUrlPatterns = new RegExp("^/(store|antibody|search/results|order/catalog|order/genom-database|order/geneartgenes)/");	

	  if (blacklistUrlPatterns.test(window.location.pathname)) {
	    	shouldFirePageInfoCall  = false;
	    }
	  return shouldFirePageInfoCall;
  }

var pageInfoData= function (){
	 var isValid = checkValideversionForPost(); 
	 var shouldFirePageInfoCall  = blacklistUrlPatternsForPageInfo();
	 if(isValid && shouldFirePageInfoCall){
		 $.ajax({
			 headers: {                 
		            "Content-Type": "application/json; charset=utf-8"  
		            }, 
			    url:environmentURL.PAGEDATAINFO+'/header/stats',
			    dataType: 'json',
			    type: "POST",
			    contentType: 'application/json',
			    data: JSON.stringify( {  "jqueryVersion":clientLibsDetails.jqueryVersion,
			    	   "cqVersion":clientLibsDetails.$cqVersion,
			    	   "jq172Version":clientLibsDetails.$jq172Version,
			    	   "actingVersion":clientLibsDetails.actingVersion,
			    	   "version":clientLibsDetails.$Version,
			    	   "angularVersion":clientLibsDetails.angularVersion,
			    	   "bootstrapVersion":clientLibsDetails.bootstrapVersion,
			    	   "compatibilityMode":clientLibsDetails.compatibilityMode,
			    	   "iframe":clientLibsDetails.iFrame,
			    	   "ie":clientLibsDetails.isIE,
			    	   "trueVersion":clientLibsDetails.trueVersion,
			    	   "jquerySelector":clientLibsDetails.jquerySelector,
			    	   "httpEquiv" : clientLibsDetails.httpEquiv,
			    	   "jversion" : clientLibsDetails.$jVersion,
			    	   "url" : clientLibsDetails.url } ),
			    	   success : function(response) {
			    		   console.log( 'success', response );
			           },
			           error : function(err) {
			               console.log( 'Data not persisted', err );
			           }
			});
	 }
	
}

//push the content down when the header is wrapped in more than one
$(document).ready(function () {
	gcbPositioning();
	$(window).bind(" resize", gcbPositioning);
	pageInfoData();
});


function initRedeemQuote() {

	$enterQuote = $('.footer .enter-quote');
	$goButton = $("#redeemQuoteGoButton");
	$quoteInput = $(".footer #redeemQuoteInput");
	$quoteError = $("#redeemQuoteErrorMessage");

	textReplacement($quoteInput, $goButton);

	$enterQuote.addClass('enter-quote-closed');
	$(".toggle-quote").click(function () {
		if( $enterQuote.hasClass('enter-quote-closed')){
			$enterQuote.show().removeClass('enter-quote-closed');
		}
		else{
			$enterQuote.hide().addClass('enter-quote-closed');
			textReplacement($quoteInput, $goButton);
			if (!$quoteInput.hasClass("placeholder")) {
				$quoteInput.addClass("placeholder");
			}
			$quoteError.text("");
		}
		return false;
	});

	$goButton.click(function () {
		var quote = $quoteInput.val();

		if (quote.match(/^[PDMRT]/i) || quote.match(/^[0-9]+$/))
		{
			showRedeemQuoteError('* "S" quotes only here.  Enter others in cart.');
			return false;
		}
		else if (!quote || quote.length == 0 || !quote.match(/^[A-Za-z0-9]+$/) || !quote.match(/^[Ss]{1}[0-9]+$/))
		{
			showRedeemQuoteError('* Invalid quote number.');
			return false;
		}

		return true;
	});

	function showRedeemQuoteError(errorText) {
		//morganm moved styles to alerts.css in global.csss
		$quoteError.text(errorText).show();
		$quoteInput.addClass('error');
	}
}

function initLanguageSelect(cq4Domain) {

	var currentLangCode = _lt.user.displayLang;
	var changeLanguageSelect = $("#changeLanguageSelect");

	if (changeLanguageSelect) {
		var optionValues = $("#changeLanguageSelect option");
		if (optionValues) {
			var optionsArray = jQuery.makeArray(optionValues);
			$.each (optionsArray, function(index, option) {
				if (option.value == currentLangCode) {
					changeLanguageSelect.val(currentLangCode);
				}
			});
		}
	}

	$("#changeLanguageButton").live('click',function () {
		var selectedLanguage = $("#changeLanguageSelect").val().split("-"); //iso-lang
		ltCountrySelect.changeUrlForSelectedCountryLanguage(selectedLanguage[1],selectedLanguage[0]);
		return false;
	});

	// Determine if language menu should display if data attribute is set to isoCode
	if ($('#form-select-language').attr('data-country-code') === _lt.user.displayIso) {
		$('#form-select-language').show();
	}
}

function initMobileFooterCollapse() {
    $('.footer-group-collapsable .footer-header').bind('click', function() {
        var $footerTitle = $(this);
        var $footerIcon = $footerTitle.find('.footer-icon');
        var $footerContent = $footerTitle.siblings();

        // Toggle the unordered list
        $footerContent.toggleClass('in');
        // Toggle between plus/minus classes
        $footerIcon.toggleClass('icon-plus-sign icon-minus-sign');
    });
}


function initCountryFlag() {
	if ( window.ltCountryInfo ) {
		var isoCode = _lt.user.getInfo('displayIso','us');
		var flag = ltCountryInfo[isoCode].flag;
		var countryName = ltCountryInfo[isoCode].name;
		if (flag) {
			if (flag.indexOf('http') != 0) {
				if (flag.indexOf('/') == 0) {
					flag = window.location.protocol + "//" + environmentURL.LTSERVER + flag;
				}
				else {
					flag = window.location.protocol + "//" + environmentURL.LTSERVER + '/' + flag;
				}
			}

			// Country Flag and Country Name occur in header and footer
			$('.country-flag-img').attr('src', flag);
			$('.country-name').text(countryName);

		}
	}
}


function initBrandsImage() {
	if ( window.ltCountryInfo ) {

		var isoCode = _lt.user.getInfo('displayIso','us');
		var langCode = _lt.user.displayLang;

		var thisCountryInfo = ltCountryInfo[isoCode];
		var brandsImagePath = thisCountryInfo['brandsImagePath'];

		//Default to US image if none found for current region
		if ( !brandsImagePath && ltCountryInfo['us'] ) brandsImagePath = ltCountryInfo['us']['brandsImagePath'];

		// Do we have an image path? Let's fix any protocol issues and build out the CSS for it
		if ( brandsImagePath ) {

			// Fix protocol if necessary
			if (brandsImagePath.indexOf('http') != 0) {
				if (brandsImagePath.indexOf('/') == 0) {
					brandsImagePath = window.location.protocol + "//" + environmentURL.LTSERVER + brandsImagePath;
				} else {
					brandsImagePath = window.location.protocol + "//" + environmentURL.LTSERVER + '/' + brandsImagePath;
				}
			}
			var brandsImageUrl = 'url("' + brandsImagePath + '")';
		}

		var $brandsBar = $('#hfOurProductsList');
		var $brandsList = $('#hfOurProductsMobileList');

		var $brandsParent = $brandsBar.parent();
		var $brandsListParent = $brandsList.parent();

		var totalBrands = 0;
		for ( var i = 1; i <= 5; i++ ) {

			var $brandElement = $('.product-nav-'+i, $brandsBar);
			var $brandLink = $('a',$brandElement);

			var $listElement = $('.product-nav-'+i, $brandsList);
			var $listLink = $('a',$listElement);

			var thisURL = thisCountryInfo['brand'+i+'linkURL'];
			var thisText = thisCountryInfo['brand'+i+'linkText'];

			var thisOpensInNewWindow = thisCountryInfo['brand'+i+'openLinkInNewWindow'];

			// If a URL is set, assign it - otherwise remove the brand image
			if ( thisURL ) {
				totalBrands++;
				$brandLink.attr('href',thisURL);
				if ( thisOpensInNewWindow && ( thisOpensInNewWindow === true || thisOpensInNewWindow === 'true' ) ) {
					$brandLink.attr('target','_blank');
				}

				if ( thisText ) {
					$listLink.attr('href',thisURL).text(thisText);
					if ( thisOpensInNewWindow && ( thisOpensInNewWindow === true || thisOpensInNewWindow === 'true' ) ) {
						$listLink.attr('target','_blank');
					}
				} else {
					$listLink.parent().remove();
				}


			} else {
				$brandElement.remove();
				$listElement.remove();
			}
		}

		if ( totalBrands > 0 ) {
			// Set as 'active' which should show it, use a class to space these out when needed
			$brandsBar.addClass('our-products-list-'+totalBrands+'-items');
			$brandsParent.addClass('active');

			// Nuke the target_blank anchors in punchout for B2B users
			initB2bPunchoutLinks( $('a[target=_blank]',$brandsBar) );
			initB2bPunchoutLinks( $('a[target=_blank]',$brandsList) );
		} else {
			$brandsParent.remove();
			$brandsListParent.remove();
		}
	}

}
/* Chosen v1.4.2 | (c) 2011-2015 by Harvest | MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md */
(function() {
    var a, AbstractChosen, Chosen, SelectParser, b, c = {}.hasOwnProperty,
        d = function(a, b) {
            function d() {
                this.constructor = a
            }
            for (var e in b) c.call(b, e) && (a[e] = b[e]);
            return d.prototype = b.prototype, a.prototype = new d, a.__super__ = b.prototype, a
        };
    SelectParser = function() {
        function SelectParser() {
            this.options_index = 0, this.parsed = []
        }
        return SelectParser.prototype.add_node = function(a) {
            return "OPTGROUP" === a.nodeName.toUpperCase() ? this.add_group(a) : this.add_option(a)
        }, SelectParser.prototype.add_group = function(a) {
            var b, c, d, e, f, g;
            for (b = this.parsed.length, this.parsed.push({
                    array_index: b,
                    group: !0,
                    label: this.escapeExpression(a.label),
                    title: a.title ? a.title : void 0,
                    children: 0,
                    disabled: a.disabled,
                    classes: a.className
                }), f = a.childNodes, g = [], d = 0, e = f.length; e > d; d++) c = f[d], g.push(this.add_option(c, b, a.disabled));
            return g
        }, SelectParser.prototype.add_option = function(a, b, c) {
            return "OPTION" === a.nodeName.toUpperCase() ? ("" !== a.text ? (null != b && (this.parsed[b].children += 1), this.parsed.push({
                array_index: this.parsed.length,
                options_index: this.options_index,
                value: a.value,
                text: a.text,
                html: a.innerHTML,
                title: a.title ? a.title : void 0,
                selected: a.selected,
                disabled: c === !0 ? c : a.disabled,
                group_array_index: b,
                group_label: null != b ? this.parsed[b].label : null,
                classes: a.className,
                style: a.style.cssText
            })) : this.parsed.push({
                array_index: this.parsed.length,
                options_index: this.options_index,
                empty: !0
            }), this.options_index += 1) : void 0
        }, SelectParser.prototype.escapeExpression = function(a) {
            var b, c;
            return null == a || a === !1 ? "" : /[\&\<\>\"\'\`]/.test(a) ? (b = {
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#x27;",
                "`": "&#x60;"
            }, c = /&(?!\w+;)|[\<\>\"\'\`]/g, a.replace(c, function(a) {
                return b[a] || "&amp;"
            })) : a
        }, SelectParser
    }(), SelectParser.select_to_array = function(a) {
        var b, c, d, e, f;
        for (c = new SelectParser, f = a.childNodes, d = 0, e = f.length; e > d; d++) b = f[d], c.add_node(b);
        return c.parsed
    }, AbstractChosen = function() {
        function AbstractChosen(a, b) {
            this.form_field = a, this.options = null != b ? b : {}, AbstractChosen.browser_is_supported() && (this.is_multiple = this.form_field.multiple, this.set_default_text(), this.set_default_values(), this.setup(), this.set_up_html(), this.register_observers(), this.on_ready())
        }
        return AbstractChosen.prototype.set_default_values = function() {
            var a = this;
            return this.click_test_action = function(b) {
                return a.test_active_click(b)
            }, this.activate_action = function(b) {
                return a.activate_field(b)
            }, this.active_field = !1, this.mouse_on_container = !1, this.results_showing = !1, this.result_highlighted = null, this.allow_single_deselect = null != this.options.allow_single_deselect && null != this.form_field.options[0] && "" === this.form_field.options[0].text ? this.options.allow_single_deselect : !1, this.disable_search_threshold = this.options.disable_search_threshold || 0, this.disable_search = this.options.disable_search || !1, this.enable_split_word_search = null != this.options.enable_split_word_search ? this.options.enable_split_word_search : !0, this.group_search = null != this.options.group_search ? this.options.group_search : !0, this.search_contains = this.options.search_contains || !1, this.single_backstroke_delete = null != this.options.single_backstroke_delete ? this.options.single_backstroke_delete : !0, this.max_selected_options = this.options.max_selected_options || 1 / 0, this.inherit_select_classes = this.options.inherit_select_classes || !1, this.display_selected_options = null != this.options.display_selected_options ? this.options.display_selected_options : !0, this.display_disabled_options = null != this.options.display_disabled_options ? this.options.display_disabled_options : !0, this.include_group_label_in_selected = this.options.include_group_label_in_selected || !1
        }, AbstractChosen.prototype.set_default_text = function() {
            return this.default_text = this.form_field.getAttribute("data-placeholder") ? this.form_field.getAttribute("data-placeholder") : this.is_multiple ? this.options.placeholder_text_multiple || this.options.placeholder_text || AbstractChosen.default_multiple_text : this.options.placeholder_text_single || this.options.placeholder_text || AbstractChosen.default_single_text, this.results_none_found = this.form_field.getAttribute("data-no_results_text") || this.options.no_results_text || AbstractChosen.default_no_result_text
        }, AbstractChosen.prototype.choice_label = function(a) {
            return this.include_group_label_in_selected && null != a.group_label ? "<b class='group-name'>" + a.group_label + "</b>" + a.html : a.html
        }, AbstractChosen.prototype.mouse_enter = function() {
            return this.mouse_on_container = !0
        }, AbstractChosen.prototype.mouse_leave = function() {
            return this.mouse_on_container = !1
        }, AbstractChosen.prototype.input_focus = function() {
            var a = this;
            if (this.is_multiple) {
                if (!this.active_field) return setTimeout(function() {
                    return a.container_mousedown()
                }, 50)
            } else if (!this.active_field) return this.activate_field()
        }, AbstractChosen.prototype.input_blur = function() {
            var a = this;
            return this.mouse_on_container ? void 0 : (this.active_field = !1, setTimeout(function() {
                return a.blur_test()
            }, 100))
        }, AbstractChosen.prototype.results_option_build = function(a) {
            var b, c, d, e, f;
            for (b = "", f = this.results_data, d = 0, e = f.length; e > d; d++) c = f[d], b += c.group ? this.result_add_group(c) : this.result_add_option(c), (null != a ? a.first : void 0) && (c.selected && this.is_multiple ? this.choice_build(c) : c.selected && !this.is_multiple && this.single_set_selected_text(this.choice_label(c)));
            return b
        }, AbstractChosen.prototype.result_add_option = function(a) {
            var b, c;
            return a.search_match ? this.include_option_in_results(a) ? (b = [], a.disabled || a.selected && this.is_multiple || b.push("active-result"), !a.disabled || a.selected && this.is_multiple || b.push("disabled-result"), a.selected && b.push("result-selected"), null != a.group_array_index && b.push("group-option"), "" !== a.classes && b.push(a.classes), c = document.createElement("li"), c.className = b.join(" "), c.style.cssText = a.style, c.setAttribute("data-option-array-index", a.array_index), c.innerHTML = a.search_text, a.title && (c.title = a.title), this.outerHTML(c)) : "" : ""
        }, AbstractChosen.prototype.result_add_group = function(a) {
            var b, c;
            return a.search_match || a.group_match ? a.active_options > 0 ? (b = [], b.push("group-result"), a.classes && b.push(a.classes), c = document.createElement("li"), c.className = b.join(" "), c.innerHTML = a.search_text, a.title && (c.title = a.title), this.outerHTML(c)) : "" : ""
        }, AbstractChosen.prototype.results_update_field = function() {
            return this.set_default_text(), this.is_multiple || this.results_reset_cleanup(), this.result_clear_highlight(), this.results_build(), this.results_showing ? this.winnow_results() : void 0
        }, AbstractChosen.prototype.reset_single_select_options = function() {
            var a, b, c, d, e;
            for (d = this.results_data, e = [], b = 0, c = d.length; c > b; b++) a = d[b], a.selected ? e.push(a.selected = !1) : e.push(void 0);
            return e
        }, AbstractChosen.prototype.results_toggle = function() {
            return this.results_showing ? this.results_hide() : this.results_show()
        }, AbstractChosen.prototype.results_search = function() {
            return this.results_showing ? this.winnow_results() : this.results_show()
        }, AbstractChosen.prototype.winnow_results = function() {
            var a, b, c, d, e, f, g, h, i, j, k, l;
            for (this.no_results_clear(), d = 0, f = this.get_search_text(), a = f.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), i = new RegExp(a, "i"), c = this.get_search_regex(a), l = this.results_data, j = 0, k = l.length; k > j; j++) b = l[j], b.search_match = !1, e = null, this.include_option_in_results(b) && (b.group && (b.group_match = !1, b.active_options = 0), null != b.group_array_index && this.results_data[b.group_array_index] && (e = this.results_data[b.group_array_index], 0 === e.active_options && e.search_match && (d += 1), e.active_options += 1), b.search_text = b.group ? b.label : b.html, (!b.group || this.group_search) && (b.search_match = this.search_string_match(b.search_text, c), b.search_match && !b.group && (d += 1), b.search_match ? (f.length && (g = b.search_text.search(i), h = b.search_text.substr(0, g + f.length) + "</em>" + b.search_text.substr(g + f.length), b.search_text = h.substr(0, g) + "<em>" + h.substr(g)), null != e && (e.group_match = !0)) : null != b.group_array_index && this.results_data[b.group_array_index].search_match && (b.search_match = !0)));
            return this.result_clear_highlight(), 1 > d && f.length ? (this.update_results_content(""), this.no_results(f)) : (this.update_results_content(this.results_option_build()), this.winnow_results_set_highlight())
        }, AbstractChosen.prototype.get_search_regex = function(a) {
            var b;
            return b = this.search_contains ? "" : "^", new RegExp(b + a, "i")
        }, AbstractChosen.prototype.search_string_match = function(a, b) {
            var c, d, e, f;
            if (b.test(a)) return !0;
            if (this.enable_split_word_search && (a.indexOf(" ") >= 0 || 0 === a.indexOf("[")) && (d = a.replace(/\[|\]/g, "").split(" "), d.length))
                for (e = 0, f = d.length; f > e; e++)
                    if (c = d[e], b.test(c)) return !0
        }, AbstractChosen.prototype.choices_count = function() {
            var a, b, c, d;
            if (null != this.selected_option_count) return this.selected_option_count;
            for (this.selected_option_count = 0, d = this.form_field.options, b = 0, c = d.length; c > b; b++) a = d[b], a.selected && (this.selected_option_count += 1);
            return this.selected_option_count
        }, AbstractChosen.prototype.choices_click = function(a) {
            return a.preventDefault(), this.results_showing || this.is_disabled ? void 0 : this.results_show()
        }, AbstractChosen.prototype.keyup_checker = function(a) {
            var b, c;
            switch (b = null != (c = a.which) ? c : a.keyCode, this.search_field_scale(), b) {
                case 8:
                    if (this.is_multiple && this.backstroke_length < 1 && this.choices_count() > 0) return this.keydown_backstroke();
                    if (!this.pending_backstroke) return this.result_clear_highlight(), this.results_search();
                    break;
                case 13:
                    if (a.preventDefault(), this.results_showing) return this.result_select(a);
                    break;
                case 27:
                    return this.results_showing && this.results_hide(), !0;
                case 9:
                case 38:
                case 40:
                case 16:
                case 91:
                case 17:
                    break;
                default:
                    return this.results_search()
            }
        }, AbstractChosen.prototype.clipboard_event_checker = function() {
            var a = this;
            return setTimeout(function() {
                return a.results_search()
            }, 50)
        }, AbstractChosen.prototype.container_width = function() {
            return null != this.options.width ? this.options.width : "" + this.form_field.offsetWidth + "px"
        }, AbstractChosen.prototype.include_option_in_results = function(a) {
            return this.is_multiple && !this.display_selected_options && a.selected ? !1 : !this.display_disabled_options && a.disabled ? !1 : a.empty ? !1 : !0
        }, AbstractChosen.prototype.search_results_touchstart = function(a) {
            return this.touch_started = !0, this.search_results_mouseover(a)
        }, AbstractChosen.prototype.search_results_touchmove = function(a) {
            return this.touch_started = !1, this.search_results_mouseout(a)
        }, AbstractChosen.prototype.search_results_touchend = function(a) {
            return this.touch_started ? this.search_results_mouseup(a) : void 0
        }, AbstractChosen.prototype.outerHTML = function(a) {
            var b;
            return a.outerHTML ? a.outerHTML : (b = document.createElement("div"), b.appendChild(a), b.innerHTML)
        }, AbstractChosen.browser_is_supported = function() {
            return "Microsoft Internet Explorer" === window.navigator.appName ? document.documentMode >= 4 : !0;
        }, AbstractChosen.default_multiple_text = "Select Some Options", AbstractChosen.default_single_text = "Select an Option", AbstractChosen.default_no_result_text = "No results match", AbstractChosen
    }(), a = jQuery, a.fn.extend({
        chosen: function(b) {
            return AbstractChosen.browser_is_supported() ? this.each(function() {
                var c, d;
                c = a(this), d = c.data("chosen"), "destroy" === b && d instanceof Chosen ? d.destroy() : d instanceof Chosen || c.data("chosen", new Chosen(this, b))
            }) : this
        }
    }), Chosen = function(c) {
        function Chosen() {
            return b = Chosen.__super__.constructor.apply(this, arguments)
        }
        return d(Chosen, c), Chosen.prototype.setup = function() {
            return this.form_field_jq = a(this.form_field), this.current_selectedIndex = this.form_field.selectedIndex, this.is_rtl = this.form_field_jq.hasClass("chosen-rtl")
        }, Chosen.prototype.set_up_html = function() {
            var b, c;
            return b = ["chosen-container"], b.push("chosen-container-" + (this.is_multiple ? "multi" : "single")), this.inherit_select_classes && this.form_field.className && b.push(this.form_field.className), this.is_rtl && b.push("chosen-rtl"), c = {
                "class": b.join(" "),
                style: "width: " + this.container_width() + ";",
                title: this.form_field.title
            }, this.form_field.id.length && (c.id = this.form_field.id.replace(/[^\w]/g, "_") + "_chosen"), this.container = a("<div />", c), this.is_multiple ? this.container.html('<ul class="chosen-choices"><li class="search-field"><input type="text" value="' + this.default_text + '" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chosen-drop"><ul class="chosen-results"></ul></div>') : this.container.html('<a class="chosen-single chosen-default" tabindex="-1"><span>' + this.default_text + '</span><div><b></b></div></a><div class="chosen-drop"><div class="chosen-search"><input type="text" autocomplete="off" /></div><ul class="chosen-results"></ul></div>'), this.form_field_jq.hide().after(this.container), this.dropdown = this.container.find("div.chosen-drop").first(), this.search_field = this.container.find("input").first(), this.search_results = this.container.find("ul.chosen-results").first(), this.search_field_scale(), this.search_no_results = this.container.find("li.no-results").first(), this.is_multiple ? (this.search_choices = this.container.find("ul.chosen-choices").first(), this.search_container = this.container.find("li.search-field").first()) : (this.search_container = this.container.find("div.chosen-search").first(), this.selected_item = this.container.find(".chosen-single").first()), this.results_build(), this.set_tab_index(), this.set_label_behavior()
        }, Chosen.prototype.on_ready = function() {
            return this.form_field_jq.trigger("chosen:ready", {
                chosen: this
            })
        }, Chosen.prototype.register_observers = function() {
            var a = this;
            return this.container.bind("touchstart.chosen", function(b) {
                return a.container_mousedown(b)
            }), this.container.bind("touchend.chosen", function(b) {
                return a.container_mouseup(b), b.preventDefault()
            }), this.container.bind("mousedown.chosen", function(b) {
                a.container_mousedown(b)
            }), this.container.bind("mouseup.chosen", function(b) {
                a.container_mouseup(b)
            }), this.container.bind("mouseenter.chosen", function(b) {
                a.mouse_enter(b)
            }), this.container.bind("mouseleave.chosen", function(b) {
                a.mouse_leave(b)
            }), this.search_results.bind("mouseup.chosen", function(b) {
                a.search_results_mouseup(b)
            }), this.search_results.bind("mouseover.chosen", function(b) {
                a.search_results_mouseover(b)
            }), this.search_results.bind("mouseout.chosen", function(b) {
                a.search_results_mouseout(b)
            }), this.search_results.bind("mousewheel.chosen DOMMouseScroll.chosen", function(b) {
                a.search_results_mousewheel(b)
            }), this.search_results.bind("touchstart.chosen", function(b) {
                a.search_results_touchstart(b)
            }), this.search_results.bind("touchmove.chosen", function(b) {
                a.search_results_touchmove(b)
            }), this.search_results.bind("touchend.chosen", function(b) {
                a.search_results_touchend(b)
            }), this.form_field_jq.bind("chosen:updated.chosen", function(b) {
                a.results_update_field(b)
            }), this.form_field_jq.bind("chosen:activate.chosen", function(b) {
                a.activate_field(b)
            }), this.form_field_jq.bind("chosen:open.chosen", function(b) {
                a.container_mousedown(b)
            }), this.form_field_jq.bind("chosen:close.chosen", function(b) {
                a.input_blur(b)
            }), this.search_field.bind("blur.chosen", function(b) {
                a.input_blur(b)
            }), this.search_field.bind("keyup.chosen", function(b) {
                a.keyup_checker(b)
            }), this.search_field.bind("keydown.chosen", function(b) {
                a.keydown_checker(b)
            }), this.search_field.bind("focus.chosen", function(b) {
                a.input_focus(b)
            }), this.search_field.bind("cut.chosen", function(b) {
                a.clipboard_event_checker(b)
            }), this.search_field.bind("paste.chosen", function(b) {
                a.clipboard_event_checker(b)
            }), this.is_multiple ? this.search_choices.bind("click.chosen", function(b) {
                a.choices_click(b)
            }) : this.container.bind("click.chosen", function(a) {
                a.preventDefault()
            })
        }, Chosen.prototype.destroy = function() {
            return a(this.container[0].ownerDocument).unbind("click.chosen", this.click_test_action), this.search_field[0].tabIndex && (this.form_field_jq[0].tabIndex = this.search_field[0].tabIndex), this.container.remove(), this.form_field_jq.removeData("chosen"), this.form_field_jq.show()
        }, Chosen.prototype.search_field_disabled = function() {
            return this.is_disabled = this.form_field_jq[0].disabled, this.is_disabled ? (this.container.addClass("chosen-disabled"), this.search_field[0].disabled = !0, this.is_multiple || this.selected_item.unbind("focus.chosen", this.activate_action), this.close_field()) : (this.container.removeClass("chosen-disabled"), this.search_field[0].disabled = !1, this.is_multiple ? void 0 : this.selected_item.bind("focus.chosen", this.activate_action))
        }, Chosen.prototype.container_mousedown = function(b) {
            return this.is_disabled || (b && "mousedown" === b.type && !this.results_showing && b.preventDefault(), null != b && a(b.target).hasClass("search-choice-close")) ? void 0 : (this.active_field ? this.is_multiple || !b || a(b.target)[0] !== this.selected_item[0] && !a(b.target).parents("a.chosen-single").length || (b.preventDefault(), this.results_toggle()) : (this.is_multiple && this.search_field.val(""), a(this.container[0].ownerDocument).bind("click.chosen", this.click_test_action), this.results_show()), this.activate_field())
        }, Chosen.prototype.container_mouseup = function(a) {
            return "ABBR" !== a.target.nodeName || this.is_disabled ? void 0 : this.results_reset(a)
        }, Chosen.prototype.search_results_mousewheel = function(a) {
            var b;
            return a.originalEvent && (b = a.originalEvent.deltaY || -a.originalEvent.wheelDelta || a.originalEvent.detail), null != b ? (a.preventDefault(), "DOMMouseScroll" === a.type && (b = 40 * b), this.search_results.scrollTop(b + this.search_results.scrollTop())) : void 0
        }, Chosen.prototype.blur_test = function() {
            return !this.active_field && this.container.hasClass("chosen-container-active") ? this.close_field() : void 0
        }, Chosen.prototype.close_field = function() {
            return a(this.container[0].ownerDocument).unbind("click.chosen", this.click_test_action), this.active_field = !1, this.results_hide(), this.container.removeClass("chosen-container-active"), this.clear_backstroke(), this.show_search_field_default(), this.search_field_scale()
        }, Chosen.prototype.activate_field = function() {
            return this.container.addClass("chosen-container-active"), this.active_field = !0, this.search_field.val(this.search_field.val()), this.search_field.focus()
        }, Chosen.prototype.test_active_click = function(b) {
            var c;
            return c = a(b.target).closest(".chosen-container"), c.length && this.container[0] === c[0] ? this.active_field = !0 : this.close_field()
        }, Chosen.prototype.results_build = function() {
            return this.parsing = !0, this.selected_option_count = null, this.results_data = SelectParser.select_to_array(this.form_field), this.is_multiple ? this.search_choices.find("li.search-choice").remove() : this.is_multiple || (this.single_set_selected_text(), this.disable_search || this.form_field.options.length <= this.disable_search_threshold ? (this.search_field[0].readOnly = !0, this.container.addClass("chosen-container-single-nosearch")) : (this.search_field[0].readOnly = !1, this.container.removeClass("chosen-container-single-nosearch"))), this.update_results_content(this.results_option_build({
                first: !0
            })), this.search_field_disabled(), this.show_search_field_default(), this.search_field_scale(), this.parsing = !1
        }, Chosen.prototype.result_do_highlight = function(a) {
            var b, c, d, e, f;
            if (a.length) {
                if (this.result_clear_highlight(), this.result_highlight = a, this.result_highlight.addClass("highlighted"), d = parseInt(this.search_results.css("maxHeight"), 10), f = this.search_results.scrollTop(), e = d + f, c = this.result_highlight.position().top + this.search_results.scrollTop(), b = c + this.result_highlight.outerHeight(), b >= e) return this.search_results.scrollTop(b - d > 0 ? b - d : 0);
                if (f > c) return this.search_results.scrollTop(c)
            }
        }, Chosen.prototype.result_clear_highlight = function() {
            return this.result_highlight && this.result_highlight.removeClass("highlighted"), this.result_highlight = null
        }, Chosen.prototype.results_show = function() {
            return this.is_multiple && this.max_selected_options <= this.choices_count() ? (this.form_field_jq.trigger("chosen:maxselected", {
                chosen: this
            }), !1) : (this.container.addClass("chosen-with-drop"), this.results_showing = !0, this.search_field.focus(), this.search_field.val(this.search_field.val()), this.winnow_results(), this.form_field_jq.trigger("chosen:showing_dropdown", {
                chosen: this
            }))
        }, Chosen.prototype.update_results_content = function(a) {
            return this.search_results.html(a)
        }, Chosen.prototype.results_hide = function() {
            return this.results_showing && (this.result_clear_highlight(), this.container.removeClass("chosen-with-drop"), this.form_field_jq.trigger("chosen:hiding_dropdown", {
                chosen: this
            })), this.results_showing = !1
        }, Chosen.prototype.set_tab_index = function() {
            var a;
            return this.form_field.tabIndex ? (a = this.form_field.tabIndex, this.form_field.tabIndex = -1, this.search_field[0].tabIndex = a) : void 0
        }, Chosen.prototype.set_label_behavior = function() {
            var b = this;
            return this.form_field_label = this.form_field_jq.parents("label"), !this.form_field_label.length && this.form_field.id.length && (this.form_field_label = a("label[for='" + this.form_field.id + "']")), this.form_field_label.length > 0 ? this.form_field_label.bind("click.chosen", function(a) {
                return b.is_multiple ? b.container_mousedown(a) : b.activate_field()
            }) : void 0
        }, Chosen.prototype.show_search_field_default = function() {
            return this.is_multiple && this.choices_count() < 1 && !this.active_field ? (this.search_field.val(this.default_text), this.search_field.addClass("default")) : (this.search_field.val(""), this.search_field.removeClass("default"))
        }, Chosen.prototype.search_results_mouseup = function(b) {
            var c;
            return c = a(b.target).hasClass("active-result") ? a(b.target) : a(b.target).parents(".active-result").first(), c.length ? (this.result_highlight = c, this.result_select(b), this.search_field.focus()) : void 0
        }, Chosen.prototype.search_results_mouseover = function(b) {
            var c;
            return c = a(b.target).hasClass("active-result") ? a(b.target) : a(b.target).parents(".active-result").first(), c ? this.result_do_highlight(c) : void 0
        }, Chosen.prototype.search_results_mouseout = function(b) {
            return a(b.target).hasClass("active-result") ? this.result_clear_highlight() : void 0
        }, Chosen.prototype.choice_build = function(b) {
            var c, d, e = this;
            return c = a("<li />", {
                "class": "search-choice"
            }).html("<span>" + this.choice_label(b) + "</span>"), b.disabled ? c.addClass("search-choice-disabled") : (d = a("<a />", {
                "class": "search-choice-close",
                "data-option-array-index": b.array_index
            }), d.bind("click.chosen", function(a) {
                return e.choice_destroy_link_click(a)
            }), c.append(d)), this.search_container.before(c)
        }, Chosen.prototype.choice_destroy_link_click = function(b) {
            return b.preventDefault(), b.stopPropagation(), this.is_disabled ? void 0 : this.choice_destroy(a(b.target))
        }, Chosen.prototype.choice_destroy = function(a) {
            return this.result_deselect(a[0].getAttribute("data-option-array-index")) ? (this.show_search_field_default(), this.is_multiple && this.choices_count() > 0 && this.search_field.val().length < 1 && this.results_hide(), a.parents("li").first().remove(), this.search_field_scale()) : void 0
        }, Chosen.prototype.results_reset = function() {
            return this.reset_single_select_options(), this.form_field.options[0].selected = !0, this.single_set_selected_text(), this.show_search_field_default(), this.results_reset_cleanup(), this.form_field_jq.trigger("change"), this.active_field ? this.results_hide() : void 0
        }, Chosen.prototype.results_reset_cleanup = function() {
            return this.current_selectedIndex = this.form_field.selectedIndex, this.selected_item.find("abbr").remove()
        }, Chosen.prototype.result_select = function(a) {
            var b, c;
            return this.result_highlight ? (b = this.result_highlight, this.result_clear_highlight(), this.is_multiple && this.max_selected_options <= this.choices_count() ? (this.form_field_jq.trigger("chosen:maxselected", {
                chosen: this
            }), !1) : (this.is_multiple ? b.removeClass("active-result") : this.reset_single_select_options(), b.addClass("result-selected"), c = this.results_data[b[0].getAttribute("data-option-array-index")], c.selected = !0, this.form_field.options[c.options_index].selected = !0, this.selected_option_count = null, this.is_multiple ? this.choice_build(c) : this.single_set_selected_text(this.choice_label(c)), (a.metaKey || a.ctrlKey) && this.is_multiple || this.results_hide(), this.search_field.val(""), (this.is_multiple || this.form_field.selectedIndex !== this.current_selectedIndex) && this.form_field_jq.trigger("change", {
                selected: this.form_field.options[c.options_index].value
            }), this.current_selectedIndex = this.form_field.selectedIndex, a.preventDefault(), this.search_field_scale())) : void 0
        }, Chosen.prototype.single_set_selected_text = function(a) {
            return null == a && (a = this.default_text), a === this.default_text ? this.selected_item.addClass("chosen-default") : (this.single_deselect_control_build(), this.selected_item.removeClass("chosen-default")), this.selected_item.find("span").html(a)
        }, Chosen.prototype.result_deselect = function(a) {
            var b;
            return b = this.results_data[a], this.form_field.options[b.options_index].disabled ? !1 : (b.selected = !1, this.form_field.options[b.options_index].selected = !1, this.selected_option_count = null, this.result_clear_highlight(), this.results_showing && this.winnow_results(), this.form_field_jq.trigger("change", {
                deselected: this.form_field.options[b.options_index].value
            }), this.search_field_scale(), !0)
        }, Chosen.prototype.single_deselect_control_build = function() {
            return this.allow_single_deselect ? (this.selected_item.find("abbr").length || this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>'), this.selected_item.addClass("chosen-single-with-deselect")) : void 0
        }, Chosen.prototype.get_search_text = function() {
            return a("<div/>").text(a.trim(this.search_field.val())).html()
        }, Chosen.prototype.winnow_results_set_highlight = function() {
            var a, b;
            return b = this.is_multiple ? [] : this.search_results.find(".result-selected.active-result"), a = b.length ? b.first() : this.search_results.find(".active-result").first(), null != a ? this.result_do_highlight(a) : void 0
        }, Chosen.prototype.no_results = function(b) {
            var c;
            return c = a('<li class="no-results">' + this.results_none_found + ' "<span></span>"</li>'), c.find("span").first().html(b), this.search_results.append(c), this.form_field_jq.trigger("chosen:no_results", {
                chosen: this
            })
        }, Chosen.prototype.no_results_clear = function() {
            return this.search_results.find(".no-results").remove()
        }, Chosen.prototype.keydown_arrow = function() {
            var a;
            return this.results_showing && this.result_highlight ? (a = this.result_highlight.nextAll("li.active-result").first()) ? this.result_do_highlight(a) : void 0 : this.results_show()
        }, Chosen.prototype.keyup_arrow = function() {
            var a;
            return this.results_showing || this.is_multiple ? this.result_highlight ? (a = this.result_highlight.prevAll("li.active-result"), a.length ? this.result_do_highlight(a.first()) : (this.choices_count() > 0 && this.results_hide(), this.result_clear_highlight())) : void 0 : this.results_show()
        }, Chosen.prototype.keydown_backstroke = function() {
            var a;
            return this.pending_backstroke ? (this.choice_destroy(this.pending_backstroke.find("a").first()), this.clear_backstroke()) : (a = this.search_container.siblings("li.search-choice").last(), a.length && !a.hasClass("search-choice-disabled") ? (this.pending_backstroke = a, this.single_backstroke_delete ? this.keydown_backstroke() : this.pending_backstroke.addClass("search-choice-focus")) : void 0)
        }, Chosen.prototype.clear_backstroke = function() {
            return this.pending_backstroke && this.pending_backstroke.removeClass("search-choice-focus"), this.pending_backstroke = null
        }, Chosen.prototype.keydown_checker = function(a) {
            var b, c;
            switch (b = null != (c = a.which) ? c : a.keyCode, this.search_field_scale(), 8 !== b && this.pending_backstroke && this.clear_backstroke(), b) {
                case 8:
                    this.backstroke_length = this.search_field.val().length;
                    break;
                case 9:
                    this.results_showing && !this.is_multiple && this.result_select(a), this.mouse_on_container = !1;
                    break;
                case 13:
                    this.results_showing && a.preventDefault();
                    break;
                case 32:
                    this.disable_search && a.preventDefault();
                    break;
                case 38:
                    a.preventDefault(), this.keyup_arrow();
                    break;
                case 40:
                    a.preventDefault(), this.keydown_arrow()
            }
        }, Chosen.prototype.search_field_scale = function() {
            var b, c, d, e, f, g, h, i, j;
            if (this.is_multiple) {
                for (d = 0, h = 0, f = "position:absolute; left: -1000px; top: -1000px; display:none;", g = ["font-size", "font-style", "font-weight", "font-family", "line-height", "text-transform", "letter-spacing"], i = 0, j = g.length; j > i; i++) e = g[i], f += e + ":" + this.search_field.css(e) + ";";
                return b = a("<div />", {
                    style: f
                }), b.text(this.search_field.val()), a("body").append(b), h = b.width() + 25, b.remove(), c = this.container.outerWidth(), h > c - 10 && (h = c - 10), this.search_field.css({
                    width: h + "px"
                })
            }
        }, Chosen
    }(AbstractChosen)
}).call(this);$(document).ready(function () {
	// get element
	var dimbg = jQuery('.dim-background');
	if (!dimbg.length) {
		dimbg = jQuery('<div class="dim-background" />').appendTo(jQuery('.globalHeader'));
	}
	// bindings
	var dimBgOperations = {
		bindings: function (elem, jq) {
			jq(elem).bind('opendimbg', function () {
				elem.addClass('active');
			});

			jq(elem).bind('closedimbg', function () {
				if (!jq('.minicart-toggle').hasClass('active') && !jq('#meganav-content li').hasClass('active') && !jq('#header-typeahead').is(':visible') && !jq('#myaccount-div').hasClass('in')) {
					elem.removeClass('active');
				}
			});

			jq('#miniCartButton').mouseenter(function () {
				var cartTotal = parseInt($('#miniCartHeaderTotalItems').text(), 10);
				if (!isNaN(cartTotal) && cartTotal > 0) {
					elem.trigger('opendimbg');
				}
			});

			jq('#miniCartButton').mouseleave(function () {
				elem.trigger('closedimbg');
			});
		}
	}
	dimBgOperations.bindings(dimbg, jQuery);
});
function getClientLibsDetails() {
    var angularVersion, bootstrapVersion, getLinks, cssFilesList = [], httpEquivMetaContent = 'http equiv meta element with content attribute not available';

    if(typeof angular !== 'undefined') {
        angularVersion = angular.version.full;
    } else if(typeof getAllAngularRootElements !== 'undefined') {
        angularVersion = getAllAngularRootElements()[0].getAttribute('ng-version');
    } else {
        angularVersion = 'Angular is not used';
    }

    getLinks = document.getElementsByTagName('link');

    for (var i = 0; i < getLinks.length; i++) {
        var href = getLinks[i].getAttribute('href');
        if(href && href.indexOf('.css') > -1) {
                cssFilesList.push(href);
        }
    }

    if(typeof $.fn.typeahead !== 'undefined') {
        bootstrapVersion = 'Standard';
    } else {
        bootstrapVersion = 'Not standard';
    }

    if (document.getElementsByTagName('meta')[0]) {
        httpEquivMetaContent = document.getElementsByTagName('meta')[0].getAttribute('content');
       
    }
    if(httpEquivMetaContent==null){
    	httpEquivMetaContent = document.getElementsByTagName('meta')[1].getAttribute('content');
    }

    function IeVersion() {
        //Set defaults
        var isIE = false,
            trueVersion = 0,
            actingVersion = 0,
            compatibilityMode = false;
        
        //Try to find the Trident version number
        var trident = navigator.userAgent.match(/Trident\/(\d+)/);
        if (trident) {
            isIE = true;
            //Convert from the Trident version number to the IE version number
            trueVersion = parseInt(trident[1], 10) + 4;
        }
    
        //Try to find the MSIE number
        var msie = navigator.userAgent.match(/MSIE (\d+)/);
        if (msie) {
            isIE = true;
            //Find the IE version number from the user agent string
            actingVersion = parseInt(msie[1]);
        } else {
            //Must be IE 11 in "edge" mode
            actingVersion = trueVersion;
        }
    
        //If we have both a Trident and MSIE version number, see if they're different
        if (isIE && trueVersion > 0 && actingVersion > 0) {
            //In compatibility mode if the trident number doesn't match up with the MSIE number
            compatibilityMode = trueVersion != actingVersion;
        }
        return {
            compatibilityMode : compatibilityMode,
            isIE : isIE,
            actingVersion : actingVersion,
            trueVersion : trueVersion
        };
    }

    function inIFrame() {
        var iFrame = false;
        if ( window.location !== window.parent.location ) {
            iFrame = true;
        } 
        return {
            iFrame : iFrame
        };
    }

    window.clientLibsDetails = {
        'jqueryVersion' : typeof jQuery !== 'undefined' ? jQuery.fn.jquery : 'jQuery not available',
        '$Version' : typeof $ !== 'undefined' ? $.fn.jquery : '$ not available',
        '$jVersion' : typeof $j !== 'undefined' ? $j.fn.jquery : '$j not available',
        '$cqVersion' : typeof $CQ !== 'undefined' ? $CQ.fn.jquery : '$CQ not available',
        '$jq172Version' : typeof $jQ172 !== 'undefined' ? $jQ172.fn.jquery : '$jQ172 not available',
        'jquerySelector' : (typeof jQuery !== 'undefined' ? 'jQuery' : 'jQuery not available') + (typeof $ !== 'undefined' ? ', $' : '') + (typeof $j !== 'undefined' ? ', $j' : '') + (typeof $CQ !== 'undefined' ? ', $CQ' : '') + (typeof $jQ172 !== 'undefined' ? ', $jQ172' : ''),
        'angularVersion' : angularVersion,
        'cssFileList' : cssFilesList,
        'bootstrapVersion' : bootstrapVersion,
        'httpEquiv' : httpEquivMetaContent,
        'url' : location.href,
        'compatibilityMode' :  IeVersion().compatibilityMode,
        'isIE' :  IeVersion().isIE,
        'actingVersion' : IeVersion().actingVersion,
        'trueVersion' : IeVersion().trueVersion,
        'iFrame' : inIFrame().iFrame
    };
}
// Calls various functions and utilities responsible for building header
function initHeaderFooter() {

    if ( window.globalHeaderConfig ) {

    	window.performance && window.performance.mark && window.performance.mark("headerFooter.js:blockBegin");
    	
        ltHeader.init();

        // Header
        //initMeganavHoverHandlers(); // Adds hover handlers for meganav
        initMiniCart(); // Adds minicart and assigns event listeners
        initGreeting(); // Chooses right menu for user, adds customer name
        initB2bPunchoutLinks(); // Adds event listeners to _blank links
        initCustomerServiceNumber(); // Adds customer service number if present
        B2bmessaging.Messenger.initB2bLogoAndMessage(globalHeaderConfig.b2bPartnerWebServiceUrl);
        initB2BEditMode(); // Puts EDIT / CREATE / INSPECT in messaging bar
        initCSRDisplay(); // Puts 'CSR Home' in header for CMGT CSRs
        initRecentlyViewed(); // Recently Viewed Carousel
        initMobileHeaderTransformations();
        initGlobalHeaderPromo();

        // Footer
        initRedeemQuote();
        initLanguageSelect();
        initCountryFlag();
        initBrandsImage();
        initMobileFooterCollapse();

    	window.performance && window.performance.mark && window.performance.mark("headerFooter.js:blockEnd");
    }

}

function initSiteUtilities(){
    removeBreadcrumbsForB2BUsers();
    initB2BMasterUserLoginChecks();
    initLegacyEventHandlers();
}

// Simply calls the above two functions
initHeaderFooter();
initSiteUtilities();
getClientLibsDetails();

// DTM footer init
if ( window._satellite && window._satellite.pageBottom ) { window._satellite.pageBottom(); }
